// Generated by jextract

package jolt.headers_f;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class JoltPhysicsC  {

    /* package-private */ JoltPhysicsC() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int _FEATURES_H() {
        return (int)1L;
    }
    public static int _DEFAULT_SOURCE() {
        return (int)1L;
    }
    public static int __GLIBC_USE_ISOC2X() {
        return (int)0L;
    }
    public static int __USE_ISOC11() {
        return (int)1L;
    }
    public static int __USE_ISOC99() {
        return (int)1L;
    }
    public static int __USE_ISOC95() {
        return (int)1L;
    }
    public static int __USE_POSIX_IMPLICITLY() {
        return (int)1L;
    }
    public static int _POSIX_SOURCE() {
        return (int)1L;
    }
    public static int __USE_POSIX() {
        return (int)1L;
    }
    public static int __USE_POSIX2() {
        return (int)1L;
    }
    public static int __USE_POSIX199309() {
        return (int)1L;
    }
    public static int __USE_POSIX199506() {
        return (int)1L;
    }
    public static int __USE_XOPEN2K() {
        return (int)1L;
    }
    public static int __USE_XOPEN2K8() {
        return (int)1L;
    }
    public static int _ATFILE_SOURCE() {
        return (int)1L;
    }
    public static int __WORDSIZE() {
        return (int)64L;
    }
    public static int __WORDSIZE_TIME64_COMPAT32() {
        return (int)1L;
    }
    public static int __SYSCALL_WORDSIZE() {
        return (int)64L;
    }
    public static int __USE_MISC() {
        return (int)1L;
    }
    public static int __USE_ATFILE() {
        return (int)1L;
    }
    public static int __USE_FORTIFY_LEVEL() {
        return (int)0L;
    }
    public static int __GLIBC_USE_DEPRECATED_GETS() {
        return (int)0L;
    }
    public static int __GLIBC_USE_DEPRECATED_SCANF() {
        return (int)0L;
    }
    public static int _STDC_PREDEF_H() {
        return (int)1L;
    }
    public static int __STDC_IEC_559__() {
        return (int)1L;
    }
    public static int __STDC_IEC_559_COMPLEX__() {
        return (int)1L;
    }
    public static int __GNU_LIBRARY__() {
        return (int)6L;
    }
    public static int __GLIBC__() {
        return (int)2L;
    }
    public static int __GLIBC_MINOR__() {
        return (int)37L;
    }
    public static int _SYS_CDEFS_H() {
        return (int)1L;
    }
    public static int __glibc_c99_flexarr_available() {
        return (int)1L;
    }
    public static int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI() {
        return (int)0L;
    }
    public static int __HAVE_GENERIC_SELECTION() {
        return (int)1L;
    }
    public static int __GLIBC_USE_LIB_EXT2() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_BFP_EXT() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_BFP_EXT_C2X() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_EXT() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_TYPES_EXT() {
        return (int)0L;
    }
    public static int _STDLIB_H() {
        return (int)1L;
    }
    public static int WNOHANG() {
        return (int)1L;
    }
    public static int WUNTRACED() {
        return (int)2L;
    }
    public static int WSTOPPED() {
        return (int)2L;
    }
    public static int WEXITED() {
        return (int)4L;
    }
    public static int WCONTINUED() {
        return (int)8L;
    }
    public static int WNOWAIT() {
        return (int)16777216L;
    }
    public static int __WNOTHREAD() {
        return (int)536870912L;
    }
    public static int __WALL() {
        return (int)1073741824L;
    }
    public static int __W_CONTINUED() {
        return (int)65535L;
    }
    public static int __WCOREFLAG() {
        return (int)128L;
    }
    public static int __HAVE_FLOAT128() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT128() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT64X() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT64X_LONG_DOUBLE() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT16() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT32() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT64() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT32X() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT128X() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT32() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT64() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT32X() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT64X() {
        return (int)0L;
    }
    public static int __HAVE_FLOATN_NOT_TYPEDEF() {
        return (int)0L;
    }
    public static int __ldiv_t_defined() {
        return (int)1L;
    }
    public static int __lldiv_t_defined() {
        return (int)1L;
    }
    public static int RAND_MAX() {
        return (int)2147483647L;
    }
    public static int EXIT_FAILURE() {
        return (int)1L;
    }
    public static int EXIT_SUCCESS() {
        return (int)0L;
    }
    public static int _SYS_TYPES_H() {
        return (int)1L;
    }
    public static int _BITS_TYPES_H() {
        return (int)1L;
    }
    public static int _BITS_TYPESIZES_H() {
        return (int)1L;
    }
    public static int __OFF_T_MATCHES_OFF64_T() {
        return (int)1L;
    }
    public static int __INO_T_MATCHES_INO64_T() {
        return (int)1L;
    }
    public static int __RLIM_T_MATCHES_RLIM64_T() {
        return (int)1L;
    }
    public static int __STATFS_MATCHES_STATFS64() {
        return (int)1L;
    }
    public static int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64() {
        return (int)1L;
    }
    public static int __FD_SETSIZE() {
        return (int)1024L;
    }
    public static int _BITS_TIME64_H() {
        return (int)1L;
    }
    public static int __clock_t_defined() {
        return (int)1L;
    }
    public static int __clockid_t_defined() {
        return (int)1L;
    }
    public static int __time_t_defined() {
        return (int)1L;
    }
    public static int __timer_t_defined() {
        return (int)1L;
    }
    public static int _BITS_STDINT_INTN_H() {
        return (int)1L;
    }
    public static int __BIT_TYPES_DEFINED__() {
        return (int)1L;
    }
    public static int _ENDIAN_H() {
        return (int)1L;
    }
    public static int _BITS_ENDIAN_H() {
        return (int)1L;
    }
    public static int __LITTLE_ENDIAN() {
        return (int)1234L;
    }
    public static int __BIG_ENDIAN() {
        return (int)4321L;
    }
    public static int __PDP_ENDIAN() {
        return (int)3412L;
    }
    public static int _BITS_ENDIANNESS_H() {
        return (int)1L;
    }
    public static int _BITS_BYTESWAP_H() {
        return (int)1L;
    }
    public static int _BITS_UINTN_IDENTITY_H() {
        return (int)1L;
    }
    public static int _SYS_SELECT_H() {
        return (int)1L;
    }
    public static int __sigset_t_defined() {
        return (int)1L;
    }
    public static int __timeval_defined() {
        return (int)1L;
    }
    public static int _STRUCT_TIMESPEC() {
        return (int)1L;
    }
    public static int _BITS_PTHREADTYPES_COMMON_H() {
        return (int)1L;
    }
    public static int _THREAD_SHARED_TYPES_H() {
        return (int)1L;
    }
    public static int _BITS_PTHREADTYPES_ARCH_H() {
        return (int)1L;
    }
    public static int __SIZEOF_PTHREAD_MUTEX_T() {
        return (int)40L;
    }
    public static int __SIZEOF_PTHREAD_ATTR_T() {
        return (int)56L;
    }
    public static int __SIZEOF_PTHREAD_RWLOCK_T() {
        return (int)56L;
    }
    public static int __SIZEOF_PTHREAD_BARRIER_T() {
        return (int)32L;
    }
    public static int __SIZEOF_PTHREAD_MUTEXATTR_T() {
        return (int)4L;
    }
    public static int __SIZEOF_PTHREAD_COND_T() {
        return (int)48L;
    }
    public static int __SIZEOF_PTHREAD_CONDATTR_T() {
        return (int)4L;
    }
    public static int __SIZEOF_PTHREAD_RWLOCKATTR_T() {
        return (int)8L;
    }
    public static int __SIZEOF_PTHREAD_BARRIERATTR_T() {
        return (int)4L;
    }
    public static int _THREAD_MUTEX_INTERNAL_H() {
        return (int)1L;
    }
    public static int __PTHREAD_MUTEX_HAVE_PREV() {
        return (int)1L;
    }
    public static int __have_pthread_attr_t() {
        return (int)1L;
    }
    public static int _ALLOCA_H() {
        return (int)1L;
    }
    public static int true_() {
        return (int)1L;
    }
    public static int false_() {
        return (int)0L;
    }
    public static int __bool_true_false_are_defined() {
        return (int)1L;
    }
    public static int _STDINT_H() {
        return (int)1L;
    }
    public static int _BITS_WCHAR_H() {
        return (int)1L;
    }
    public static int _BITS_STDINT_UINTN_H() {
        return (int)1L;
    }
    public static int __alignas_is_defined() {
        return (int)1L;
    }
    public static int __alignof_is_defined() {
        return (int)1L;
    }
    public static int JPC_ENABLE_ASSERTS() {
        return (int)0L;
    }
    public static int JPC_DOUBLE_PRECISION() {
        return (int)0L;
    }
    public static int JPC_BODY_ID_INDEX_BITS() {
        return (int)8388607L;
    }
    public static int JPC_BODY_ID_SEQUENCE_SHIFT() {
        return (int)24L;
    }
    public static int _JPC_IS_FREED_BODY_BIT() {
        return (int)1L;
    }
    public static OfInt wchar_t = Constants$root.C_INT$LAYOUT;
    public static OfFloat _Float32 = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble _Float64 = Constants$root.C_DOUBLE$LAYOUT;
    public static OfDouble _Float32x = Constants$root.C_DOUBLE$LAYOUT;
    public static MethodHandle __ctype_get_mb_cur_max$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__ctype_get_mb_cur_max$MH,"__ctype_get_mb_cur_max");
    }
    public static long __ctype_get_mb_cur_max () {
        var mh$ = __ctype_get_mb_cur_max$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atof$MH() {
        return RuntimeHelper.requireNonNull(constants$0.atof$MH,"atof");
    }
    public static double atof ( Addressable __nptr) {
        var mh$ = atof$MH();
        try {
            return (double)mh$.invokeExact(__nptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoi$MH() {
        return RuntimeHelper.requireNonNull(constants$0.atoi$MH,"atoi");
    }
    public static int atoi ( Addressable __nptr) {
        var mh$ = atoi$MH();
        try {
            return (int)mh$.invokeExact(__nptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atol$MH() {
        return RuntimeHelper.requireNonNull(constants$0.atol$MH,"atol");
    }
    public static long atol ( Addressable __nptr) {
        var mh$ = atol$MH();
        try {
            return (long)mh$.invokeExact(__nptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoll$MH() {
        return RuntimeHelper.requireNonNull(constants$0.atoll$MH,"atoll");
    }
    public static long atoll ( Addressable __nptr) {
        var mh$ = atoll$MH();
        try {
            return (long)mh$.invokeExact(__nptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$0.strtod$MH,"strtod");
    }
    public static double strtod ( Addressable __nptr,  Addressable __endptr) {
        var mh$ = strtod$MH();
        try {
            return (double)mh$.invokeExact(__nptr, __endptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtof$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strtof$MH,"strtof");
    }
    public static float strtof ( Addressable __nptr,  Addressable __endptr) {
        var mh$ = strtof$MH();
        try {
            return (float)mh$.invokeExact(__nptr, __endptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtol$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strtol$MH,"strtol");
    }
    public static long strtol ( Addressable __nptr,  Addressable __endptr,  int __base) {
        var mh$ = strtol$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoul$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strtoul$MH,"strtoul");
    }
    public static long strtoul ( Addressable __nptr,  Addressable __endptr,  int __base) {
        var mh$ = strtoul$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoq$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strtoq$MH,"strtoq");
    }
    public static long strtoq ( Addressable __nptr,  Addressable __endptr,  int __base) {
        var mh$ = strtoq$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtouq$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strtouq$MH,"strtouq");
    }
    public static long strtouq ( Addressable __nptr,  Addressable __endptr,  int __base) {
        var mh$ = strtouq$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strtoll$MH,"strtoll");
    }
    public static long strtoll ( Addressable __nptr,  Addressable __endptr,  int __base) {
        var mh$ = strtoll$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoull$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strtoull$MH,"strtoull");
    }
    public static long strtoull ( Addressable __nptr,  Addressable __endptr,  int __base) {
        var mh$ = strtoull$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle l64a$MH() {
        return RuntimeHelper.requireNonNull(constants$2.l64a$MH,"l64a");
    }
    public static MemoryAddress l64a ( long __n) {
        var mh$ = l64a$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle a64l$MH() {
        return RuntimeHelper.requireNonNull(constants$2.a64l$MH,"a64l");
    }
    public static long a64l ( Addressable __s) {
        var mh$ = a64l$MH();
        try {
            return (long)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfShort __int16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt __int32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong __int64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfShort __int_least16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt __int_least32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong __int_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __quad_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __intmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __off_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __off64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt __pid_t = Constants$root.C_INT$LAYOUT;
    public static OfLong __clock_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __time_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __suseconds_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __suseconds64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt __daddr_t = Constants$root.C_INT$LAYOUT;
    public static OfInt __key_t = Constants$root.C_INT$LAYOUT;
    public static OfInt __clockid_t = Constants$root.C_INT$LAYOUT;
    public static OfAddress __timer_t = Constants$root.C_POINTER$LAYOUT;
    public static OfLong __blksize_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __blkcnt_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __blkcnt64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __fsword_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __ssize_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __syscall_slong_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __loff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress __caddr_t = Constants$root.C_POINTER$LAYOUT;
    public static OfLong __intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt __sig_atomic_t = Constants$root.C_INT$LAYOUT;
    public static OfLong quad_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong loff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong off_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt pid_t = Constants$root.C_INT$LAYOUT;
    public static OfLong ssize_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt daddr_t = Constants$root.C_INT$LAYOUT;
    public static OfAddress caddr_t = Constants$root.C_POINTER$LAYOUT;
    public static OfInt key_t = Constants$root.C_INT$LAYOUT;
    public static OfLong clock_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt clockid_t = Constants$root.C_INT$LAYOUT;
    public static OfLong time_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress timer_t = Constants$root.C_POINTER$LAYOUT;
    public static OfShort int16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt int32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong int64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong register_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle __bswap_16$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__bswap_16$MH,"__bswap_16");
    }
    public static short __bswap_16 ( short __bsx) {
        var mh$ = __bswap_16$MH();
        try {
            return (short)mh$.invokeExact(__bsx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __bswap_32$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__bswap_32$MH,"__bswap_32");
    }
    public static int __bswap_32 ( int __bsx) {
        var mh$ = __bswap_32$MH();
        try {
            return (int)mh$.invokeExact(__bsx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __bswap_64$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__bswap_64$MH,"__bswap_64");
    }
    public static long __bswap_64 ( long __bsx) {
        var mh$ = __bswap_64$MH();
        try {
            return (long)mh$.invokeExact(__bsx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __uint16_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__uint16_identity$MH,"__uint16_identity");
    }
    public static short __uint16_identity ( short __x) {
        var mh$ = __uint16_identity$MH();
        try {
            return (short)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __uint32_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__uint32_identity$MH,"__uint32_identity");
    }
    public static int __uint32_identity ( int __x) {
        var mh$ = __uint32_identity$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __uint64_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__uint64_identity$MH,"__uint64_identity");
    }
    public static long __uint64_identity ( long __x) {
        var mh$ = __uint64_identity$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong suseconds_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __fd_mask = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong fd_mask = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle select$MH() {
        return RuntimeHelper.requireNonNull(constants$3.select$MH,"select");
    }
    public static int select ( int __nfds,  Addressable __readfds,  Addressable __writefds,  Addressable __exceptfds,  Addressable __timeout) {
        var mh$ = select$MH();
        try {
            return (int)mh$.invokeExact(__nfds, __readfds, __writefds, __exceptfds, __timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pselect$MH() {
        return RuntimeHelper.requireNonNull(constants$3.pselect$MH,"pselect");
    }
    public static int pselect ( int __nfds,  Addressable __readfds,  Addressable __writefds,  Addressable __exceptfds,  Addressable __timeout,  Addressable __sigmask) {
        var mh$ = pselect$MH();
        try {
            return (int)mh$.invokeExact(__nfds, __readfds, __writefds, __exceptfds, __timeout, __sigmask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong blksize_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong blkcnt_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt pthread_once_t = Constants$root.C_INT$LAYOUT;
    public static OfInt pthread_spinlock_t = Constants$root.C_INT$LAYOUT;
    public static MethodHandle random$MH() {
        return RuntimeHelper.requireNonNull(constants$3.random$MH,"random");
    }
    public static long random () {
        var mh$ = random$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srandom$MH() {
        return RuntimeHelper.requireNonNull(constants$4.srandom$MH,"srandom");
    }
    public static void srandom ( int __seed) {
        var mh$ = srandom$MH();
        try {
            mh$.invokeExact(__seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle initstate$MH() {
        return RuntimeHelper.requireNonNull(constants$4.initstate$MH,"initstate");
    }
    public static MemoryAddress initstate ( int __seed,  Addressable __statebuf,  long __statelen) {
        var mh$ = initstate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__seed, __statebuf, __statelen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setstate$MH() {
        return RuntimeHelper.requireNonNull(constants$4.setstate$MH,"setstate");
    }
    public static MemoryAddress setstate ( Addressable __statebuf) {
        var mh$ = setstate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__statebuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle random_r$MH() {
        return RuntimeHelper.requireNonNull(constants$4.random_r$MH,"random_r");
    }
    public static int random_r ( Addressable __buf,  Addressable __result) {
        var mh$ = random_r$MH();
        try {
            return (int)mh$.invokeExact(__buf, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srandom_r$MH() {
        return RuntimeHelper.requireNonNull(constants$4.srandom_r$MH,"srandom_r");
    }
    public static int srandom_r ( int __seed,  Addressable __buf) {
        var mh$ = srandom_r$MH();
        try {
            return (int)mh$.invokeExact(__seed, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle initstate_r$MH() {
        return RuntimeHelper.requireNonNull(constants$4.initstate_r$MH,"initstate_r");
    }
    public static int initstate_r ( int __seed,  Addressable __statebuf,  long __statelen,  Addressable __buf) {
        var mh$ = initstate_r$MH();
        try {
            return (int)mh$.invokeExact(__seed, __statebuf, __statelen, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setstate_r$MH() {
        return RuntimeHelper.requireNonNull(constants$5.setstate_r$MH,"setstate_r");
    }
    public static int setstate_r ( Addressable __statebuf,  Addressable __buf) {
        var mh$ = setstate_r$MH();
        try {
            return (int)mh$.invokeExact(__statebuf, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand$MH() {
        return RuntimeHelper.requireNonNull(constants$5.rand$MH,"rand");
    }
    public static int rand () {
        var mh$ = rand$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand$MH() {
        return RuntimeHelper.requireNonNull(constants$5.srand$MH,"srand");
    }
    public static void srand ( int __seed) {
        var mh$ = srand$MH();
        try {
            mh$.invokeExact(__seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand_r$MH() {
        return RuntimeHelper.requireNonNull(constants$5.rand_r$MH,"rand_r");
    }
    public static int rand_r ( Addressable __seed) {
        var mh$ = rand_r$MH();
        try {
            return (int)mh$.invokeExact(__seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle drand48$MH() {
        return RuntimeHelper.requireNonNull(constants$5.drand48$MH,"drand48");
    }
    public static double drand48 () {
        var mh$ = drand48$MH();
        try {
            return (double)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erand48$MH() {
        return RuntimeHelper.requireNonNull(constants$5.erand48$MH,"erand48");
    }
    public static double erand48 ( Addressable __xsubi) {
        var mh$ = erand48$MH();
        try {
            return (double)mh$.invokeExact(__xsubi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lrand48$MH() {
        return RuntimeHelper.requireNonNull(constants$6.lrand48$MH,"lrand48");
    }
    public static long lrand48 () {
        var mh$ = lrand48$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nrand48$MH() {
        return RuntimeHelper.requireNonNull(constants$6.nrand48$MH,"nrand48");
    }
    public static long nrand48 ( Addressable __xsubi) {
        var mh$ = nrand48$MH();
        try {
            return (long)mh$.invokeExact(__xsubi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mrand48$MH() {
        return RuntimeHelper.requireNonNull(constants$6.mrand48$MH,"mrand48");
    }
    public static long mrand48 () {
        var mh$ = mrand48$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle jrand48$MH() {
        return RuntimeHelper.requireNonNull(constants$6.jrand48$MH,"jrand48");
    }
    public static long jrand48 ( Addressable __xsubi) {
        var mh$ = jrand48$MH();
        try {
            return (long)mh$.invokeExact(__xsubi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand48$MH() {
        return RuntimeHelper.requireNonNull(constants$6.srand48$MH,"srand48");
    }
    public static void srand48 ( long __seedval) {
        var mh$ = srand48$MH();
        try {
            mh$.invokeExact(__seedval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle seed48$MH() {
        return RuntimeHelper.requireNonNull(constants$6.seed48$MH,"seed48");
    }
    public static MemoryAddress seed48 ( Addressable __seed16v) {
        var mh$ = seed48$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__seed16v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lcong48$MH() {
        return RuntimeHelper.requireNonNull(constants$7.lcong48$MH,"lcong48");
    }
    public static void lcong48 ( Addressable __param) {
        var mh$ = lcong48$MH();
        try {
            mh$.invokeExact(__param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle drand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$7.drand48_r$MH,"drand48_r");
    }
    public static int drand48_r ( Addressable __buffer,  Addressable __result) {
        var mh$ = drand48_r$MH();
        try {
            return (int)mh$.invokeExact(__buffer, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$7.erand48_r$MH,"erand48_r");
    }
    public static int erand48_r ( Addressable __xsubi,  Addressable __buffer,  Addressable __result) {
        var mh$ = erand48_r$MH();
        try {
            return (int)mh$.invokeExact(__xsubi, __buffer, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lrand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$7.lrand48_r$MH,"lrand48_r");
    }
    public static int lrand48_r ( Addressable __buffer,  Addressable __result) {
        var mh$ = lrand48_r$MH();
        try {
            return (int)mh$.invokeExact(__buffer, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nrand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$7.nrand48_r$MH,"nrand48_r");
    }
    public static int nrand48_r ( Addressable __xsubi,  Addressable __buffer,  Addressable __result) {
        var mh$ = nrand48_r$MH();
        try {
            return (int)mh$.invokeExact(__xsubi, __buffer, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mrand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$7.mrand48_r$MH,"mrand48_r");
    }
    public static int mrand48_r ( Addressable __buffer,  Addressable __result) {
        var mh$ = mrand48_r$MH();
        try {
            return (int)mh$.invokeExact(__buffer, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle jrand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$8.jrand48_r$MH,"jrand48_r");
    }
    public static int jrand48_r ( Addressable __xsubi,  Addressable __buffer,  Addressable __result) {
        var mh$ = jrand48_r$MH();
        try {
            return (int)mh$.invokeExact(__xsubi, __buffer, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$8.srand48_r$MH,"srand48_r");
    }
    public static int srand48_r ( long __seedval,  Addressable __buffer) {
        var mh$ = srand48_r$MH();
        try {
            return (int)mh$.invokeExact(__seedval, __buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle seed48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$8.seed48_r$MH,"seed48_r");
    }
    public static int seed48_r ( Addressable __seed16v,  Addressable __buffer) {
        var mh$ = seed48_r$MH();
        try {
            return (int)mh$.invokeExact(__seed16v, __buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lcong48_r$MH() {
        return RuntimeHelper.requireNonNull(constants$8.lcong48_r$MH,"lcong48_r");
    }
    public static int lcong48_r ( Addressable __param,  Addressable __buffer) {
        var mh$ = lcong48_r$MH();
        try {
            return (int)mh$.invokeExact(__param, __buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle arc4random$MH() {
        return RuntimeHelper.requireNonNull(constants$8.arc4random$MH,"arc4random");
    }
    public static int arc4random () {
        var mh$ = arc4random$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle arc4random_buf$MH() {
        return RuntimeHelper.requireNonNull(constants$8.arc4random_buf$MH,"arc4random_buf");
    }
    public static void arc4random_buf ( Addressable __buf,  long __size) {
        var mh$ = arc4random_buf$MH();
        try {
            mh$.invokeExact(__buf, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle arc4random_uniform$MH() {
        return RuntimeHelper.requireNonNull(constants$9.arc4random_uniform$MH,"arc4random_uniform");
    }
    public static int arc4random_uniform ( int __upper_bound) {
        var mh$ = arc4random_uniform$MH();
        try {
            return (int)mh$.invokeExact(__upper_bound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$9.malloc$MH,"malloc");
    }
    public static MemoryAddress malloc ( long __size) {
        var mh$ = malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle calloc$MH() {
        return RuntimeHelper.requireNonNull(constants$9.calloc$MH,"calloc");
    }
    public static MemoryAddress calloc ( long __nmemb,  long __size) {
        var mh$ = calloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__nmemb, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$9.realloc$MH,"realloc");
    }
    public static MemoryAddress realloc ( Addressable __ptr,  long __size) {
        var mh$ = realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__ptr, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle free$MH() {
        return RuntimeHelper.requireNonNull(constants$9.free$MH,"free");
    }
    public static void free ( Addressable __ptr) {
        var mh$ = free$MH();
        try {
            mh$.invokeExact(__ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle reallocarray$MH() {
        return RuntimeHelper.requireNonNull(constants$9.reallocarray$MH,"reallocarray");
    }
    public static MemoryAddress reallocarray ( Addressable __ptr,  long __nmemb,  long __size) {
        var mh$ = reallocarray$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__ptr, __nmemb, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle alloca$MH() {
        return RuntimeHelper.requireNonNull(constants$10.alloca$MH,"alloca");
    }
    public static MemoryAddress alloca ( long __size) {
        var mh$ = alloca$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle valloc$MH() {
        return RuntimeHelper.requireNonNull(constants$10.valloc$MH,"valloc");
    }
    public static MemoryAddress valloc ( long __size) {
        var mh$ = valloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle posix_memalign$MH() {
        return RuntimeHelper.requireNonNull(constants$10.posix_memalign$MH,"posix_memalign");
    }
    public static int posix_memalign ( Addressable __memptr,  long __alignment,  long __size) {
        var mh$ = posix_memalign$MH();
        try {
            return (int)mh$.invokeExact(__memptr, __alignment, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle aligned_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$10.aligned_alloc$MH,"aligned_alloc");
    }
    public static MemoryAddress aligned_alloc ( long __alignment,  long __size) {
        var mh$ = aligned_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__alignment, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$10.abort$MH,"abort");
    }
    public static void abort () {
        var mh$ = abort$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$11.atexit$MH,"atexit");
    }
    public static int atexit ( Addressable __func) {
        var mh$ = atexit$MH();
        try {
            return (int)mh$.invokeExact(__func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$11.at_quick_exit$MH,"at_quick_exit");
    }
    public static int at_quick_exit ( Addressable __func) {
        var mh$ = at_quick_exit$MH();
        try {
            return (int)mh$.invokeExact(__func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle on_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$12.on_exit$MH,"on_exit");
    }
    public static int on_exit ( Addressable __func,  Addressable __arg) {
        var mh$ = on_exit$MH();
        try {
            return (int)mh$.invokeExact(__func, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exit$MH() {
        return RuntimeHelper.requireNonNull(constants$12.exit$MH,"exit");
    }
    public static void exit ( int __status) {
        var mh$ = exit$MH();
        try {
            mh$.invokeExact(__status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$12.quick_exit$MH,"quick_exit");
    }
    public static void quick_exit ( int __status) {
        var mh$ = quick_exit$MH();
        try {
            mh$.invokeExact(__status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$12._Exit$MH,"_Exit");
    }
    public static void _Exit ( int __status) {
        var mh$ = _Exit$MH();
        try {
            mh$.invokeExact(__status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$12.getenv$MH,"getenv");
    }
    public static MemoryAddress getenv ( Addressable __name) {
        var mh$ = getenv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$13.putenv$MH,"putenv");
    }
    public static int putenv ( Addressable __string) {
        var mh$ = putenv$MH();
        try {
            return (int)mh$.invokeExact(__string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$13.setenv$MH,"setenv");
    }
    public static int setenv ( Addressable __name,  Addressable __value,  int __replace) {
        var mh$ = setenv$MH();
        try {
            return (int)mh$.invokeExact(__name, __value, __replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$13.unsetenv$MH,"unsetenv");
    }
    public static int unsetenv ( Addressable __name) {
        var mh$ = unsetenv$MH();
        try {
            return (int)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearenv$MH() {
        return RuntimeHelper.requireNonNull(constants$13.clearenv$MH,"clearenv");
    }
    public static int clearenv () {
        var mh$ = clearenv$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mktemp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.mktemp$MH,"mktemp");
    }
    public static MemoryAddress mktemp ( Addressable __template) {
        var mh$ = mktemp$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__template);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkstemp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.mkstemp$MH,"mkstemp");
    }
    public static int mkstemp ( Addressable __template) {
        var mh$ = mkstemp$MH();
        try {
            return (int)mh$.invokeExact(__template);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkstemps$MH() {
        return RuntimeHelper.requireNonNull(constants$14.mkstemps$MH,"mkstemps");
    }
    public static int mkstemps ( Addressable __template,  int __suffixlen) {
        var mh$ = mkstemps$MH();
        try {
            return (int)mh$.invokeExact(__template, __suffixlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkdtemp$MH() {
        return RuntimeHelper.requireNonNull(constants$14.mkdtemp$MH,"mkdtemp");
    }
    public static MemoryAddress mkdtemp ( Addressable __template) {
        var mh$ = mkdtemp$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__template);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle system$MH() {
        return RuntimeHelper.requireNonNull(constants$14.system$MH,"system");
    }
    public static int system ( Addressable __command) {
        var mh$ = system$MH();
        try {
            return (int)mh$.invokeExact(__command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realpath$MH() {
        return RuntimeHelper.requireNonNull(constants$14.realpath$MH,"realpath");
    }
    public static MemoryAddress realpath ( Addressable __name,  Addressable __resolved) {
        var mh$ = realpath$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name, __resolved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$15.bsearch$MH,"bsearch");
    }
    public static MemoryAddress bsearch ( Addressable __key,  Addressable __base,  long __nmemb,  long __size,  Addressable __compar) {
        var mh$ = bsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__key, __base, __nmemb, __size, __compar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort$MH() {
        return RuntimeHelper.requireNonNull(constants$15.qsort$MH,"qsort");
    }
    public static void qsort ( Addressable __base,  long __nmemb,  long __size,  Addressable __compar) {
        var mh$ = qsort$MH();
        try {
            mh$.invokeExact(__base, __nmemb, __size, __compar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abs$MH() {
        return RuntimeHelper.requireNonNull(constants$15.abs$MH,"abs");
    }
    public static int abs ( int __x) {
        var mh$ = abs$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle labs$MH() {
        return RuntimeHelper.requireNonNull(constants$15.labs$MH,"labs");
    }
    public static long labs ( long __x) {
        var mh$ = labs$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llabs$MH() {
        return RuntimeHelper.requireNonNull(constants$15.llabs$MH,"llabs");
    }
    public static long llabs ( long __x) {
        var mh$ = llabs$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle div$MH() {
        return RuntimeHelper.requireNonNull(constants$15.div$MH,"div");
    }
    public static MemorySegment div ( SegmentAllocator allocator,  int __numer,  int __denom) {
        var mh$ = div$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, __numer, __denom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$16.ldiv$MH,"ldiv");
    }
    public static MemorySegment ldiv ( SegmentAllocator allocator,  long __numer,  long __denom) {
        var mh$ = ldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, __numer, __denom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$16.lldiv$MH,"lldiv");
    }
    public static MemorySegment lldiv ( SegmentAllocator allocator,  long __numer,  long __denom) {
        var mh$ = lldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, __numer, __denom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$16.ecvt$MH,"ecvt");
    }
    public static MemoryAddress ecvt ( double __value,  int __ndigit,  Addressable __decpt,  Addressable __sign) {
        var mh$ = ecvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__value, __ndigit, __decpt, __sign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$16.fcvt$MH,"fcvt");
    }
    public static MemoryAddress fcvt ( double __value,  int __ndigit,  Addressable __decpt,  Addressable __sign) {
        var mh$ = fcvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__value, __ndigit, __decpt, __sign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$16.gcvt$MH,"gcvt");
    }
    public static MemoryAddress gcvt ( double __value,  int __ndigit,  Addressable __buf) {
        var mh$ = gcvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__value, __ndigit, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ecvt_r$MH() {
        return RuntimeHelper.requireNonNull(constants$16.ecvt_r$MH,"ecvt_r");
    }
    public static int ecvt_r ( double __value,  int __ndigit,  Addressable __decpt,  Addressable __sign,  Addressable __buf,  long __len) {
        var mh$ = ecvt_r$MH();
        try {
            return (int)mh$.invokeExact(__value, __ndigit, __decpt, __sign, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcvt_r$MH() {
        return RuntimeHelper.requireNonNull(constants$17.fcvt_r$MH,"fcvt_r");
    }
    public static int fcvt_r ( double __value,  int __ndigit,  Addressable __decpt,  Addressable __sign,  Addressable __buf,  long __len) {
        var mh$ = fcvt_r$MH();
        try {
            return (int)mh$.invokeExact(__value, __ndigit, __decpt, __sign, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mblen$MH() {
        return RuntimeHelper.requireNonNull(constants$17.mblen$MH,"mblen");
    }
    public static int mblen ( Addressable __s,  long __n) {
        var mh$ = mblen$MH();
        try {
            return (int)mh$.invokeExact(__s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbtowc$MH() {
        return RuntimeHelper.requireNonNull(constants$17.mbtowc$MH,"mbtowc");
    }
    public static int mbtowc ( Addressable __pwc,  Addressable __s,  long __n) {
        var mh$ = mbtowc$MH();
        try {
            return (int)mh$.invokeExact(__pwc, __s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb$MH() {
        return RuntimeHelper.requireNonNull(constants$17.wctomb$MH,"wctomb");
    }
    public static int wctomb ( Addressable __s,  int __wchar) {
        var mh$ = wctomb$MH();
        try {
            return (int)mh$.invokeExact(__s, __wchar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs$MH() {
        return RuntimeHelper.requireNonNull(constants$17.mbstowcs$MH,"mbstowcs");
    }
    public static long mbstowcs ( Addressable __pwcs,  Addressable __s,  long __n) {
        var mh$ = mbstowcs$MH();
        try {
            return (long)mh$.invokeExact(__pwcs, __s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs$MH() {
        return RuntimeHelper.requireNonNull(constants$17.wcstombs$MH,"wcstombs");
    }
    public static long wcstombs ( Addressable __s,  Addressable __pwcs,  long __n) {
        var mh$ = wcstombs$MH();
        try {
            return (long)mh$.invokeExact(__s, __pwcs, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rpmatch$MH() {
        return RuntimeHelper.requireNonNull(constants$18.rpmatch$MH,"rpmatch");
    }
    public static int rpmatch ( Addressable __response) {
        var mh$ = rpmatch$MH();
        try {
            return (int)mh$.invokeExact(__response);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsubopt$MH() {
        return RuntimeHelper.requireNonNull(constants$18.getsubopt$MH,"getsubopt");
    }
    public static int getsubopt ( Addressable __optionp,  Addressable __tokens,  Addressable __valuep) {
        var mh$ = getsubopt$MH();
        try {
            return (int)mh$.invokeExact(__optionp, __tokens, __valuep);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getloadavg$MH() {
        return RuntimeHelper.requireNonNull(constants$18.getloadavg$MH,"getloadavg");
    }
    public static int getloadavg ( Addressable __loadavg,  int __nelem) {
        var mh$ = getloadavg$MH();
        try {
            return (int)mh$.invokeExact(__loadavg, __nelem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfShort int_least16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt int_least32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong int_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast16_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast32_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat JPC_Real = Constants$root.C_FLOAT$LAYOUT;
    public static int JPC_MAX_PHYSICS_JOBS() {
        return (int)2048L;
    }
    public static int JPC_MAX_PHYSICS_BARRIERS() {
        return (int)8L;
    }
    public static int JPC_SHAPE_TYPE_CONVEX() {
        return (int)0L;
    }
    public static int JPC_SHAPE_TYPE_COMPOUND() {
        return (int)1L;
    }
    public static int JPC_SHAPE_TYPE_DECORATED() {
        return (int)2L;
    }
    public static int JPC_SHAPE_TYPE_MESH() {
        return (int)3L;
    }
    public static int JPC_SHAPE_TYPE_HEIGHT_FIELD() {
        return (int)4L;
    }
    public static int JPC_SHAPE_TYPE_USER1() {
        return (int)5L;
    }
    public static int JPC_SHAPE_TYPE_USER2() {
        return (int)6L;
    }
    public static int JPC_SHAPE_TYPE_USER3() {
        return (int)7L;
    }
    public static int JPC_SHAPE_TYPE_USER4() {
        return (int)8L;
    }
    public static int JPC_SHAPE_SUB_TYPE_SPHERE() {
        return (int)0L;
    }
    public static int JPC_SHAPE_SUB_TYPE_BOX() {
        return (int)1L;
    }
    public static int JPC_SHAPE_SUB_TYPE_TRIANGLE() {
        return (int)2L;
    }
    public static int JPC_SHAPE_SUB_TYPE_CAPSULE() {
        return (int)3L;
    }
    public static int JPC_SHAPE_SUB_TYPE_TAPERED_CAPSULE() {
        return (int)4L;
    }
    public static int JPC_SHAPE_SUB_TYPE_CYLINDER() {
        return (int)5L;
    }
    public static int JPC_SHAPE_SUB_TYPE_CONVEX_HULL() {
        return (int)6L;
    }
    public static int JPC_SHAPE_SUB_TYPE_STATIC_COMPOUND() {
        return (int)7L;
    }
    public static int JPC_SHAPE_SUB_TYPE_MUTABLE_COMPOUND() {
        return (int)8L;
    }
    public static int JPC_SHAPE_SUB_TYPE_ROTATED_TRANSLATED() {
        return (int)9L;
    }
    public static int JPC_SHAPE_SUB_TYPE_SCALED() {
        return (int)10L;
    }
    public static int JPC_SHAPE_SUB_TYPE_OFFSET_CENTER_OF_MASS() {
        return (int)11L;
    }
    public static int JPC_SHAPE_SUB_TYPE_MESH() {
        return (int)12L;
    }
    public static int JPC_SHAPE_SUB_TYPE_HEIGHT_FIELD() {
        return (int)13L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER1() {
        return (int)14L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER2() {
        return (int)15L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER3() {
        return (int)16L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER4() {
        return (int)17L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER5() {
        return (int)18L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER6() {
        return (int)19L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER7() {
        return (int)20L;
    }
    public static int JPC_SHAPE_SUB_TYPE_USER8() {
        return (int)21L;
    }
    public static int JPC_MOTION_TYPE_STATIC() {
        return (int)0L;
    }
    public static int JPC_MOTION_TYPE_KINEMATIC() {
        return (int)1L;
    }
    public static int JPC_MOTION_TYPE_DYNAMIC() {
        return (int)2L;
    }
    public static int JPC_MOTION_QUALITY_DISCRETE() {
        return (int)0L;
    }
    public static int JPC_MOTION_QUALITY_LINEAR_CAST() {
        return (int)1L;
    }
    public static int JPC_OVERRIDE_MASS_PROPS_CALC_MASS_INERTIA() {
        return (int)0L;
    }
    public static int JPC_OVERRIDE_MASS_PROPS_CALC_INERTIA() {
        return (int)1L;
    }
    public static int JPC_OVERRIDE_MASS_PROPS_MASS_INERTIA_PROVIDED() {
        return (int)2L;
    }
    public static int JPC_ACTIVATION_ACTIVATE() {
        return (int)0L;
    }
    public static int JPC_ACTIVATION_DONT_ACTIVATE() {
        return (int)1L;
    }
    public static int _JPC_ACTIVATION_FORCEU32() {
        return (int)2147483647L;
    }
    public static int JPC_VALIDATE_RESULT_ACCEPT_ALL_CONTACTS() {
        return (int)0L;
    }
    public static int JPC_VALIDATE_RESULT_ACCEPT_CONTACT() {
        return (int)1L;
    }
    public static int JPC_VALIDATE_RESULT_REJECT_CONTACT() {
        return (int)2L;
    }
    public static int JPC_VALIDATE_RESULT_REJECT_ALL_CONTACTS() {
        return (int)3L;
    }
    public static int _JPC_VALIDATE_RESULT_FORCEU32() {
        return (int)2147483647L;
    }
    public static int JPC_BACK_FACE_IGNORE() {
        return (int)0L;
    }
    public static int JPC_BACK_FACE_COLLIDE() {
        return (int)1L;
    }
    public static MethodHandle JPC_RegisterDefaultAllocator$MH() {
        return RuntimeHelper.requireNonNull(constants$19.JPC_RegisterDefaultAllocator$MH,"JPC_RegisterDefaultAllocator");
    }
    public static void JPC_RegisterDefaultAllocator () {
        var mh$ = JPC_RegisterDefaultAllocator$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_RegisterCustomAllocator$MH() {
        return RuntimeHelper.requireNonNull(constants$20.JPC_RegisterCustomAllocator$MH,"JPC_RegisterCustomAllocator");
    }
    public static void JPC_RegisterCustomAllocator ( Addressable in_alloc,  Addressable in_free,  Addressable in_aligned_alloc,  Addressable in_aligned_free) {
        var mh$ = JPC_RegisterCustomAllocator$MH();
        try {
            mh$.invokeExact(in_alloc, in_free, in_aligned_alloc, in_aligned_free);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CreateFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$20.JPC_CreateFactory$MH,"JPC_CreateFactory");
    }
    public static void JPC_CreateFactory () {
        var mh$ = JPC_CreateFactory$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_DestroyFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$20.JPC_DestroyFactory$MH,"JPC_DestroyFactory");
    }
    public static void JPC_DestroyFactory () {
        var mh$ = JPC_DestroyFactory$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_RegisterTypes$MH() {
        return RuntimeHelper.requireNonNull(constants$20.JPC_RegisterTypes$MH,"JPC_RegisterTypes");
    }
    public static void JPC_RegisterTypes () {
        var mh$ = JPC_RegisterTypes$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyCreationSettings_SetDefault$MH() {
        return RuntimeHelper.requireNonNull(constants$20.JPC_BodyCreationSettings_SetDefault$MH,"JPC_BodyCreationSettings_SetDefault");
    }
    public static void JPC_BodyCreationSettings_SetDefault ( Addressable out_settings) {
        var mh$ = JPC_BodyCreationSettings_SetDefault$MH();
        try {
            mh$.invokeExact(out_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyCreationSettings_Set$MH() {
        return RuntimeHelper.requireNonNull(constants$20.JPC_BodyCreationSettings_Set$MH,"JPC_BodyCreationSettings_Set");
    }
    public static void JPC_BodyCreationSettings_Set ( Addressable out_settings,  Addressable in_shape,  Addressable in_position,  Addressable in_rotation,  byte in_motion_type,  short in_layer) {
        var mh$ = JPC_BodyCreationSettings_Set$MH();
        try {
            mh$.invokeExact(out_settings, in_shape, in_position, in_rotation, in_motion_type, in_layer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetMotionQuality$MH() {
        return RuntimeHelper.requireNonNull(constants$21.JPC_MotionProperties_GetMotionQuality$MH,"JPC_MotionProperties_GetMotionQuality");
    }
    public static byte JPC_MotionProperties_GetMotionQuality ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetMotionQuality$MH();
        try {
            return (byte)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$21.JPC_MotionProperties_GetLinearVelocity$MH,"JPC_MotionProperties_GetLinearVelocity");
    }
    public static void JPC_MotionProperties_GetLinearVelocity ( Addressable in_properties,  Addressable out_linear_velocity) {
        var mh$ = JPC_MotionProperties_GetLinearVelocity$MH();
        try {
            mh$.invokeExact(in_properties, out_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$21.JPC_MotionProperties_SetLinearVelocity$MH,"JPC_MotionProperties_SetLinearVelocity");
    }
    public static void JPC_MotionProperties_SetLinearVelocity ( Addressable in_properties,  Addressable in_linear_velocity) {
        var mh$ = JPC_MotionProperties_SetLinearVelocity$MH();
        try {
            mh$.invokeExact(in_properties, in_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetLinearVelocityClamped$MH() {
        return RuntimeHelper.requireNonNull(constants$21.JPC_MotionProperties_SetLinearVelocityClamped$MH,"JPC_MotionProperties_SetLinearVelocityClamped");
    }
    public static void JPC_MotionProperties_SetLinearVelocityClamped ( Addressable in_properties,  Addressable in_linear_velocity) {
        var mh$ = JPC_MotionProperties_SetLinearVelocityClamped$MH();
        try {
            mh$.invokeExact(in_properties, in_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$21.JPC_MotionProperties_GetAngularVelocity$MH,"JPC_MotionProperties_GetAngularVelocity");
    }
    public static void JPC_MotionProperties_GetAngularVelocity ( Addressable in_properties,  Addressable out_angular_velocity) {
        var mh$ = JPC_MotionProperties_GetAngularVelocity$MH();
        try {
            mh$.invokeExact(in_properties, out_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$21.JPC_MotionProperties_SetAngularVelocity$MH,"JPC_MotionProperties_SetAngularVelocity");
    }
    public static void JPC_MotionProperties_SetAngularVelocity ( Addressable in_properties,  Addressable in_angular_velocity) {
        var mh$ = JPC_MotionProperties_SetAngularVelocity$MH();
        try {
            mh$.invokeExact(in_properties, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetAngularVelocityClamped$MH() {
        return RuntimeHelper.requireNonNull(constants$22.JPC_MotionProperties_SetAngularVelocityClamped$MH,"JPC_MotionProperties_SetAngularVelocityClamped");
    }
    public static void JPC_MotionProperties_SetAngularVelocityClamped ( Addressable in_properties,  Addressable in_angular_velocity) {
        var mh$ = JPC_MotionProperties_SetAngularVelocityClamped$MH();
        try {
            mh$.invokeExact(in_properties, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_MoveKinematic$MH() {
        return RuntimeHelper.requireNonNull(constants$22.JPC_MotionProperties_MoveKinematic$MH,"JPC_MotionProperties_MoveKinematic");
    }
    public static void JPC_MotionProperties_MoveKinematic ( Addressable in_properties,  Addressable in_delta_position,  Addressable in_delta_rotation,  float in_delta_time) {
        var mh$ = JPC_MotionProperties_MoveKinematic$MH();
        try {
            mh$.invokeExact(in_properties, in_delta_position, in_delta_rotation, in_delta_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_ClampLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$22.JPC_MotionProperties_ClampLinearVelocity$MH,"JPC_MotionProperties_ClampLinearVelocity");
    }
    public static void JPC_MotionProperties_ClampLinearVelocity ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_ClampLinearVelocity$MH();
        try {
            mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_ClampAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$22.JPC_MotionProperties_ClampAngularVelocity$MH,"JPC_MotionProperties_ClampAngularVelocity");
    }
    public static void JPC_MotionProperties_ClampAngularVelocity ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_ClampAngularVelocity$MH();
        try {
            mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetLinearDamping$MH() {
        return RuntimeHelper.requireNonNull(constants$22.JPC_MotionProperties_GetLinearDamping$MH,"JPC_MotionProperties_GetLinearDamping");
    }
    public static float JPC_MotionProperties_GetLinearDamping ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetLinearDamping$MH();
        try {
            return (float)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetLinearDamping$MH() {
        return RuntimeHelper.requireNonNull(constants$22.JPC_MotionProperties_SetLinearDamping$MH,"JPC_MotionProperties_SetLinearDamping");
    }
    public static void JPC_MotionProperties_SetLinearDamping ( Addressable in_properties,  float in_linear_damping) {
        var mh$ = JPC_MotionProperties_SetLinearDamping$MH();
        try {
            mh$.invokeExact(in_properties, in_linear_damping);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetAngularDamping$MH() {
        return RuntimeHelper.requireNonNull(constants$23.JPC_MotionProperties_GetAngularDamping$MH,"JPC_MotionProperties_GetAngularDamping");
    }
    public static float JPC_MotionProperties_GetAngularDamping ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetAngularDamping$MH();
        try {
            return (float)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetAngularDamping$MH() {
        return RuntimeHelper.requireNonNull(constants$23.JPC_MotionProperties_SetAngularDamping$MH,"JPC_MotionProperties_SetAngularDamping");
    }
    public static void JPC_MotionProperties_SetAngularDamping ( Addressable in_properties,  float in_angular_damping) {
        var mh$ = JPC_MotionProperties_SetAngularDamping$MH();
        try {
            mh$.invokeExact(in_properties, in_angular_damping);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetGravityFactor$MH() {
        return RuntimeHelper.requireNonNull(constants$23.JPC_MotionProperties_GetGravityFactor$MH,"JPC_MotionProperties_GetGravityFactor");
    }
    public static float JPC_MotionProperties_GetGravityFactor ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetGravityFactor$MH();
        try {
            return (float)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetGravityFactor$MH() {
        return RuntimeHelper.requireNonNull(constants$23.JPC_MotionProperties_SetGravityFactor$MH,"JPC_MotionProperties_SetGravityFactor");
    }
    public static void JPC_MotionProperties_SetGravityFactor ( Addressable in_properties,  float in_gravity_factor) {
        var mh$ = JPC_MotionProperties_SetGravityFactor$MH();
        try {
            mh$.invokeExact(in_properties, in_gravity_factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetMassProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$23.JPC_MotionProperties_SetMassProperties$MH,"JPC_MotionProperties_SetMassProperties");
    }
    public static void JPC_MotionProperties_SetMassProperties ( Addressable in_properties,  Addressable in_mass_properties) {
        var mh$ = JPC_MotionProperties_SetMassProperties$MH();
        try {
            mh$.invokeExact(in_properties, in_mass_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetInverseMass$MH() {
        return RuntimeHelper.requireNonNull(constants$23.JPC_MotionProperties_GetInverseMass$MH,"JPC_MotionProperties_GetInverseMass");
    }
    public static float JPC_MotionProperties_GetInverseMass ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetInverseMass$MH();
        try {
            return (float)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetInverseMass$MH() {
        return RuntimeHelper.requireNonNull(constants$24.JPC_MotionProperties_SetInverseMass$MH,"JPC_MotionProperties_SetInverseMass");
    }
    public static void JPC_MotionProperties_SetInverseMass ( Addressable in_properties,  float in_inv_mass) {
        var mh$ = JPC_MotionProperties_SetInverseMass$MH();
        try {
            mh$.invokeExact(in_properties, in_inv_mass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetInverseInertiaDiagonal$MH() {
        return RuntimeHelper.requireNonNull(constants$24.JPC_MotionProperties_GetInverseInertiaDiagonal$MH,"JPC_MotionProperties_GetInverseInertiaDiagonal");
    }
    public static void JPC_MotionProperties_GetInverseInertiaDiagonal ( Addressable in_properties,  Addressable out_inverse_inertia_diagonal) {
        var mh$ = JPC_MotionProperties_GetInverseInertiaDiagonal$MH();
        try {
            mh$.invokeExact(in_properties, out_inverse_inertia_diagonal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetInertiaRotation$MH() {
        return RuntimeHelper.requireNonNull(constants$24.JPC_MotionProperties_GetInertiaRotation$MH,"JPC_MotionProperties_GetInertiaRotation");
    }
    public static void JPC_MotionProperties_GetInertiaRotation ( Addressable in_properties,  Addressable out_inertia_rotation) {
        var mh$ = JPC_MotionProperties_GetInertiaRotation$MH();
        try {
            mh$.invokeExact(in_properties, out_inertia_rotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetInverseInertia$MH() {
        return RuntimeHelper.requireNonNull(constants$24.JPC_MotionProperties_SetInverseInertia$MH,"JPC_MotionProperties_SetInverseInertia");
    }
    public static void JPC_MotionProperties_SetInverseInertia ( Addressable in_properties,  Addressable in_diagonal,  Addressable in_rotation) {
        var mh$ = JPC_MotionProperties_SetInverseInertia$MH();
        try {
            mh$.invokeExact(in_properties, in_diagonal, in_rotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetLocalSpaceInverseInertia$MH() {
        return RuntimeHelper.requireNonNull(constants$24.JPC_MotionProperties_GetLocalSpaceInverseInertia$MH,"JPC_MotionProperties_GetLocalSpaceInverseInertia");
    }
    public static void JPC_MotionProperties_GetLocalSpaceInverseInertia ( Addressable in_properties,  Addressable out_matrix) {
        var mh$ = JPC_MotionProperties_GetLocalSpaceInverseInertia$MH();
        try {
            mh$.invokeExact(in_properties, out_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetInverseInertiaForRotation$MH() {
        return RuntimeHelper.requireNonNull(constants$24.JPC_MotionProperties_GetInverseInertiaForRotation$MH,"JPC_MotionProperties_GetInverseInertiaForRotation");
    }
    public static void JPC_MotionProperties_GetInverseInertiaForRotation ( Addressable in_properties,  Addressable in_rotation_matrix,  Addressable out_matrix) {
        var mh$ = JPC_MotionProperties_GetInverseInertiaForRotation$MH();
        try {
            mh$.invokeExact(in_properties, in_rotation_matrix, out_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_MultiplyWorldSpaceInverseInertiaByVector$MH() {
        return RuntimeHelper.requireNonNull(constants$25.JPC_MotionProperties_MultiplyWorldSpaceInverseInertiaByVector$MH,"JPC_MotionProperties_MultiplyWorldSpaceInverseInertiaByVector");
    }
    public static void JPC_MotionProperties_MultiplyWorldSpaceInverseInertiaByVector ( Addressable in_properties,  Addressable in_body_rotation,  Addressable in_vector,  Addressable out_vector) {
        var mh$ = JPC_MotionProperties_MultiplyWorldSpaceInverseInertiaByVector$MH();
        try {
            mh$.invokeExact(in_properties, in_body_rotation, in_vector, out_vector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetPointVelocityCOM$MH() {
        return RuntimeHelper.requireNonNull(constants$25.JPC_MotionProperties_GetPointVelocityCOM$MH,"JPC_MotionProperties_GetPointVelocityCOM");
    }
    public static void JPC_MotionProperties_GetPointVelocityCOM ( Addressable in_properties,  Addressable in_point_relative_to_com,  Addressable out_point) {
        var mh$ = JPC_MotionProperties_GetPointVelocityCOM$MH();
        try {
            mh$.invokeExact(in_properties, in_point_relative_to_com, out_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetMaxLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$25.JPC_MotionProperties_GetMaxLinearVelocity$MH,"JPC_MotionProperties_GetMaxLinearVelocity");
    }
    public static float JPC_MotionProperties_GetMaxLinearVelocity ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetMaxLinearVelocity$MH();
        try {
            return (float)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetMaxLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$25.JPC_MotionProperties_SetMaxLinearVelocity$MH,"JPC_MotionProperties_SetMaxLinearVelocity");
    }
    public static void JPC_MotionProperties_SetMaxLinearVelocity ( Addressable in_properties,  float in_max_linear_velocity) {
        var mh$ = JPC_MotionProperties_SetMaxLinearVelocity$MH();
        try {
            mh$.invokeExact(in_properties, in_max_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_GetMaxAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$25.JPC_MotionProperties_GetMaxAngularVelocity$MH,"JPC_MotionProperties_GetMaxAngularVelocity");
    }
    public static float JPC_MotionProperties_GetMaxAngularVelocity ( Addressable in_properties) {
        var mh$ = JPC_MotionProperties_GetMaxAngularVelocity$MH();
        try {
            return (float)mh$.invokeExact(in_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MotionProperties_SetMaxAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$25.JPC_MotionProperties_SetMaxAngularVelocity$MH,"JPC_MotionProperties_SetMaxAngularVelocity");
    }
    public static void JPC_MotionProperties_SetMaxAngularVelocity ( Addressable in_properties,  float in_max_angular_velocity) {
        var mh$ = JPC_MotionProperties_SetMaxAngularVelocity$MH();
        try {
            mh$.invokeExact(in_properties, in_max_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TempAllocator_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$26.JPC_TempAllocator_Create$MH,"JPC_TempAllocator_Create");
    }
    public static MemoryAddress JPC_TempAllocator_Create ( int in_size) {
        var mh$ = JPC_TempAllocator_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TempAllocator_Destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$26.JPC_TempAllocator_Destroy$MH,"JPC_TempAllocator_Destroy");
    }
    public static void JPC_TempAllocator_Destroy ( Addressable in_allocator) {
        var mh$ = JPC_TempAllocator_Destroy$MH();
        try {
            mh$.invokeExact(in_allocator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_JobSystem_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$26.JPC_JobSystem_Create$MH,"JPC_JobSystem_Create");
    }
    public static MemoryAddress JPC_JobSystem_Create ( int in_max_jobs,  int in_max_barriers,  int in_num_threads) {
        var mh$ = JPC_JobSystem_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_max_jobs, in_max_barriers, in_num_threads);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_JobSystem_Destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$26.JPC_JobSystem_Destroy$MH,"JPC_JobSystem_Destroy");
    }
    public static void JPC_JobSystem_Destroy ( Addressable in_job_system) {
        var mh$ = JPC_JobSystem_Destroy$MH();
        try {
            mh$.invokeExact(in_job_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$26.JPC_PhysicsSystem_Create$MH,"JPC_PhysicsSystem_Create");
    }
    public static MemoryAddress JPC_PhysicsSystem_Create ( int in_max_bodies,  int in_num_body_mutexes,  int in_max_body_pairs,  int in_max_contact_constraints,  Addressable in_broad_phase_layer_interface,  Addressable in_object_vs_broad_phase_layer_filter,  Addressable in_object_layer_pair_filter) {
        var mh$ = JPC_PhysicsSystem_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_max_bodies, in_num_body_mutexes, in_max_body_pairs, in_max_contact_constraints, in_broad_phase_layer_interface, in_object_vs_broad_phase_layer_filter, in_object_layer_pair_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_Destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$26.JPC_PhysicsSystem_Destroy$MH,"JPC_PhysicsSystem_Destroy");
    }
    public static void JPC_PhysicsSystem_Destroy ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_Destroy$MH();
        try {
            mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_SetBodyActivationListener$MH() {
        return RuntimeHelper.requireNonNull(constants$27.JPC_PhysicsSystem_SetBodyActivationListener$MH,"JPC_PhysicsSystem_SetBodyActivationListener");
    }
    public static void JPC_PhysicsSystem_SetBodyActivationListener ( Addressable in_physics_system,  Addressable in_listener) {
        var mh$ = JPC_PhysicsSystem_SetBodyActivationListener$MH();
        try {
            mh$.invokeExact(in_physics_system, in_listener);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodyActivationListener$MH() {
        return RuntimeHelper.requireNonNull(constants$27.JPC_PhysicsSystem_GetBodyActivationListener$MH,"JPC_PhysicsSystem_GetBodyActivationListener");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBodyActivationListener ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBodyActivationListener$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_SetContactListener$MH() {
        return RuntimeHelper.requireNonNull(constants$27.JPC_PhysicsSystem_SetContactListener$MH,"JPC_PhysicsSystem_SetContactListener");
    }
    public static void JPC_PhysicsSystem_SetContactListener ( Addressable in_physics_system,  Addressable in_listener) {
        var mh$ = JPC_PhysicsSystem_SetContactListener$MH();
        try {
            mh$.invokeExact(in_physics_system, in_listener);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetContactListener$MH() {
        return RuntimeHelper.requireNonNull(constants$27.JPC_PhysicsSystem_GetContactListener$MH,"JPC_PhysicsSystem_GetContactListener");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetContactListener ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetContactListener$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetNumBodies$MH() {
        return RuntimeHelper.requireNonNull(constants$27.JPC_PhysicsSystem_GetNumBodies$MH,"JPC_PhysicsSystem_GetNumBodies");
    }
    public static int JPC_PhysicsSystem_GetNumBodies ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetNumBodies$MH();
        try {
            return (int)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetNumActiveBodies$MH() {
        return RuntimeHelper.requireNonNull(constants$27.JPC_PhysicsSystem_GetNumActiveBodies$MH,"JPC_PhysicsSystem_GetNumActiveBodies");
    }
    public static int JPC_PhysicsSystem_GetNumActiveBodies ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetNumActiveBodies$MH();
        try {
            return (int)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetMaxBodies$MH() {
        return RuntimeHelper.requireNonNull(constants$28.JPC_PhysicsSystem_GetMaxBodies$MH,"JPC_PhysicsSystem_GetMaxBodies");
    }
    public static int JPC_PhysicsSystem_GetMaxBodies ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetMaxBodies$MH();
        try {
            return (int)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetGravity$MH() {
        return RuntimeHelper.requireNonNull(constants$28.JPC_PhysicsSystem_GetGravity$MH,"JPC_PhysicsSystem_GetGravity");
    }
    public static void JPC_PhysicsSystem_GetGravity ( Addressable in_physics_system,  Addressable out_gravity) {
        var mh$ = JPC_PhysicsSystem_GetGravity$MH();
        try {
            mh$.invokeExact(in_physics_system, out_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_SetGravity$MH() {
        return RuntimeHelper.requireNonNull(constants$28.JPC_PhysicsSystem_SetGravity$MH,"JPC_PhysicsSystem_SetGravity");
    }
    public static void JPC_PhysicsSystem_SetGravity ( Addressable in_physics_system,  Addressable in_gravity) {
        var mh$ = JPC_PhysicsSystem_SetGravity$MH();
        try {
            mh$.invokeExact(in_physics_system, in_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodyInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$28.JPC_PhysicsSystem_GetBodyInterface$MH,"JPC_PhysicsSystem_GetBodyInterface");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBodyInterface ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBodyInterface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodyInterfaceNoLock$MH() {
        return RuntimeHelper.requireNonNull(constants$28.JPC_PhysicsSystem_GetBodyInterfaceNoLock$MH,"JPC_PhysicsSystem_GetBodyInterfaceNoLock");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBodyInterfaceNoLock ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBodyInterfaceNoLock$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_OptimizeBroadPhase$MH() {
        return RuntimeHelper.requireNonNull(constants$28.JPC_PhysicsSystem_OptimizeBroadPhase$MH,"JPC_PhysicsSystem_OptimizeBroadPhase");
    }
    public static void JPC_PhysicsSystem_OptimizeBroadPhase ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_OptimizeBroadPhase$MH();
        try {
            mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_Update$MH() {
        return RuntimeHelper.requireNonNull(constants$29.JPC_PhysicsSystem_Update$MH,"JPC_PhysicsSystem_Update");
    }
    public static void JPC_PhysicsSystem_Update ( Addressable in_physics_system,  float in_delta_time,  int in_collision_steps,  int in_integration_sub_steps,  Addressable in_temp_allocator,  Addressable in_job_system) {
        var mh$ = JPC_PhysicsSystem_Update$MH();
        try {
            mh$.invokeExact(in_physics_system, in_delta_time, in_collision_steps, in_integration_sub_steps, in_temp_allocator, in_job_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodyLockInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$29.JPC_PhysicsSystem_GetBodyLockInterface$MH,"JPC_PhysicsSystem_GetBodyLockInterface");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBodyLockInterface ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBodyLockInterface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodyLockInterfaceNoLock$MH() {
        return RuntimeHelper.requireNonNull(constants$29.JPC_PhysicsSystem_GetBodyLockInterfaceNoLock$MH,"JPC_PhysicsSystem_GetBodyLockInterfaceNoLock");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBodyLockInterfaceNoLock ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBodyLockInterfaceNoLock$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBroadPhaseQuery$MH() {
        return RuntimeHelper.requireNonNull(constants$29.JPC_PhysicsSystem_GetBroadPhaseQuery$MH,"JPC_PhysicsSystem_GetBroadPhaseQuery");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBroadPhaseQuery ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBroadPhaseQuery$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetNarrowPhaseQuery$MH() {
        return RuntimeHelper.requireNonNull(constants$29.JPC_PhysicsSystem_GetNarrowPhaseQuery$MH,"JPC_PhysicsSystem_GetNarrowPhaseQuery");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetNarrowPhaseQuery ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetNarrowPhaseQuery$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetNarrowPhaseQueryNoLock$MH() {
        return RuntimeHelper.requireNonNull(constants$29.JPC_PhysicsSystem_GetNarrowPhaseQueryNoLock$MH,"JPC_PhysicsSystem_GetNarrowPhaseQueryNoLock");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetNarrowPhaseQueryNoLock ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetNarrowPhaseQueryNoLock$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodyIDs$MH() {
        return RuntimeHelper.requireNonNull(constants$30.JPC_PhysicsSystem_GetBodyIDs$MH,"JPC_PhysicsSystem_GetBodyIDs");
    }
    public static void JPC_PhysicsSystem_GetBodyIDs ( Addressable in_physics_system,  int in_max_body_ids,  Addressable out_num_body_ids,  Addressable out_body_ids) {
        var mh$ = JPC_PhysicsSystem_GetBodyIDs$MH();
        try {
            mh$.invokeExact(in_physics_system, in_max_body_ids, out_num_body_ids, out_body_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetActiveBodyIDs$MH() {
        return RuntimeHelper.requireNonNull(constants$30.JPC_PhysicsSystem_GetActiveBodyIDs$MH,"JPC_PhysicsSystem_GetActiveBodyIDs");
    }
    public static void JPC_PhysicsSystem_GetActiveBodyIDs ( Addressable in_physics_system,  int in_max_body_ids,  Addressable out_num_body_ids,  Addressable out_body_ids) {
        var mh$ = JPC_PhysicsSystem_GetActiveBodyIDs$MH();
        try {
            mh$.invokeExact(in_physics_system, in_max_body_ids, out_num_body_ids, out_body_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_PhysicsSystem_GetBodiesUnsafe$MH() {
        return RuntimeHelper.requireNonNull(constants$30.JPC_PhysicsSystem_GetBodiesUnsafe$MH,"JPC_PhysicsSystem_GetBodiesUnsafe");
    }
    public static MemoryAddress JPC_PhysicsSystem_GetBodiesUnsafe ( Addressable in_physics_system) {
        var mh$ = JPC_PhysicsSystem_GetBodiesUnsafe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_physics_system);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyLockInterface_LockRead$MH() {
        return RuntimeHelper.requireNonNull(constants$30.JPC_BodyLockInterface_LockRead$MH,"JPC_BodyLockInterface_LockRead");
    }
    public static void JPC_BodyLockInterface_LockRead ( Addressable in_lock_interface,  int in_body_id,  Addressable out_lock) {
        var mh$ = JPC_BodyLockInterface_LockRead$MH();
        try {
            mh$.invokeExact(in_lock_interface, in_body_id, out_lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyLockInterface_UnlockRead$MH() {
        return RuntimeHelper.requireNonNull(constants$30.JPC_BodyLockInterface_UnlockRead$MH,"JPC_BodyLockInterface_UnlockRead");
    }
    public static void JPC_BodyLockInterface_UnlockRead ( Addressable in_lock_interface,  Addressable io_lock) {
        var mh$ = JPC_BodyLockInterface_UnlockRead$MH();
        try {
            mh$.invokeExact(in_lock_interface, io_lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyLockInterface_LockWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$30.JPC_BodyLockInterface_LockWrite$MH,"JPC_BodyLockInterface_LockWrite");
    }
    public static void JPC_BodyLockInterface_LockWrite ( Addressable in_lock_interface,  int in_body_id,  Addressable out_lock) {
        var mh$ = JPC_BodyLockInterface_LockWrite$MH();
        try {
            mh$.invokeExact(in_lock_interface, in_body_id, out_lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyLockInterface_UnlockWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$31.JPC_BodyLockInterface_UnlockWrite$MH,"JPC_BodyLockInterface_UnlockWrite");
    }
    public static void JPC_BodyLockInterface_UnlockWrite ( Addressable in_lock_interface,  Addressable io_lock) {
        var mh$ = JPC_BodyLockInterface_UnlockWrite$MH();
        try {
            mh$.invokeExact(in_lock_interface, io_lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BroadPhaseQuery_CastRay$MH() {
        return RuntimeHelper.requireNonNull(constants$31.JPC_BroadPhaseQuery_CastRay$MH,"JPC_BroadPhaseQuery_CastRay");
    }
    public static void JPC_BroadPhaseQuery_CastRay ( Addressable in_query,  Addressable in_ray,  Addressable io_collector,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter) {
        var mh$ = JPC_BroadPhaseQuery_CastRay$MH();
        try {
            mh$.invokeExact(in_query, in_ray, io_collector, in_broad_phase_layer_filter, in_object_layer_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BroadPhaseQuery_CollideAABox$MH() {
        return RuntimeHelper.requireNonNull(constants$31.JPC_BroadPhaseQuery_CollideAABox$MH,"JPC_BroadPhaseQuery_CollideAABox");
    }
    public static void JPC_BroadPhaseQuery_CollideAABox ( Addressable in_query,  Addressable in_box,  Addressable io_collector,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter) {
        var mh$ = JPC_BroadPhaseQuery_CollideAABox$MH();
        try {
            mh$.invokeExact(in_query, in_box, io_collector, in_broad_phase_layer_filter, in_object_layer_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BroadPhaseQuery_CollideSphere$MH() {
        return RuntimeHelper.requireNonNull(constants$31.JPC_BroadPhaseQuery_CollideSphere$MH,"JPC_BroadPhaseQuery_CollideSphere");
    }
    public static void JPC_BroadPhaseQuery_CollideSphere ( Addressable in_query,  Addressable in_center,  float in_radius,  Addressable io_collector,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter) {
        var mh$ = JPC_BroadPhaseQuery_CollideSphere$MH();
        try {
            mh$.invokeExact(in_query, in_center, in_radius, io_collector, in_broad_phase_layer_filter, in_object_layer_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BroadPhaseQuery_CollidePoint$MH() {
        return RuntimeHelper.requireNonNull(constants$31.JPC_BroadPhaseQuery_CollidePoint$MH,"JPC_BroadPhaseQuery_CollidePoint");
    }
    public static void JPC_BroadPhaseQuery_CollidePoint ( Addressable in_query,  Addressable in_point,  Addressable io_collector,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter) {
        var mh$ = JPC_BroadPhaseQuery_CollidePoint$MH();
        try {
            mh$.invokeExact(in_query, in_point, io_collector, in_broad_phase_layer_filter, in_object_layer_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BroadPhaseQuery_CollideOrientedBox$MH() {
        return RuntimeHelper.requireNonNull(constants$31.JPC_BroadPhaseQuery_CollideOrientedBox$MH,"JPC_BroadPhaseQuery_CollideOrientedBox");
    }
    public static void JPC_BroadPhaseQuery_CollideOrientedBox ( Addressable in_query,  Addressable in_box,  Addressable io_collector,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter) {
        var mh$ = JPC_BroadPhaseQuery_CollideOrientedBox$MH();
        try {
            mh$.invokeExact(in_query, in_box, io_collector, in_broad_phase_layer_filter, in_object_layer_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BroadPhaseQuery_CastAABox$MH() {
        return RuntimeHelper.requireNonNull(constants$32.JPC_BroadPhaseQuery_CastAABox$MH,"JPC_BroadPhaseQuery_CastAABox");
    }
    public static void JPC_BroadPhaseQuery_CastAABox ( Addressable in_query,  Addressable in_box,  Addressable io_collector,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter) {
        var mh$ = JPC_BroadPhaseQuery_CastAABox$MH();
        try {
            mh$.invokeExact(in_query, in_box, io_collector, in_broad_phase_layer_filter, in_object_layer_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_NarrowPhaseQuery_CastRay$MH() {
        return RuntimeHelper.requireNonNull(constants$32.JPC_NarrowPhaseQuery_CastRay$MH,"JPC_NarrowPhaseQuery_CastRay");
    }
    public static boolean JPC_NarrowPhaseQuery_CastRay ( Addressable in_query,  Addressable in_ray,  Addressable io_hit,  Addressable in_broad_phase_layer_filter,  Addressable in_object_layer_filter,  Addressable in_body_filter) {
        var mh$ = JPC_NarrowPhaseQuery_CastRay$MH();
        try {
            return (boolean)mh$.invokeExact(in_query, in_ray, io_hit, in_broad_phase_layer_filter, in_object_layer_filter, in_body_filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_SphereShape_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$32.JPC_SphereShape_Create$MH,"JPC_SphereShape_Create");
    }
    public static MemoryAddress JPC_SphereShape_Create ( float in_radius,  Addressable in_material) {
        var mh$ = JPC_SphereShape_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_SphereShape_GetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$32.JPC_SphereShape_GetRadius$MH,"JPC_SphereShape_GetRadius");
    }
    public static float JPC_SphereShape_GetRadius ( Addressable in_shape) {
        var mh$ = JPC_SphereShape_GetRadius$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShape_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$32.JPC_BoxShape_Create$MH,"JPC_BoxShape_Create");
    }
    public static MemoryAddress JPC_BoxShape_Create ( Addressable in_half_extent,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_BoxShape_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_extent, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShape_GetHalfExtent$MH() {
        return RuntimeHelper.requireNonNull(constants$32.JPC_BoxShape_GetHalfExtent$MH,"JPC_BoxShape_GetHalfExtent");
    }
    public static void JPC_BoxShape_GetHalfExtent ( Addressable in_shape,  Addressable out_half_extent) {
        var mh$ = JPC_BoxShape_GetHalfExtent$MH();
        try {
            mh$.invokeExact(in_shape, out_half_extent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShape_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$33.JPC_TriangleShape_Create$MH,"JPC_TriangleShape_Create");
    }
    public static MemoryAddress JPC_TriangleShape_Create ( Addressable in_v1,  Addressable in_v2,  Addressable in_v3,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_TriangleShape_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_v1, in_v2, in_v3, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShape_GetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$33.JPC_TriangleShape_GetConvexRadius$MH,"JPC_TriangleShape_GetConvexRadius");
    }
    public static float JPC_TriangleShape_GetConvexRadius ( Addressable in_shape) {
        var mh$ = JPC_TriangleShape_GetConvexRadius$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShape_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$33.JPC_CapsuleShape_Create$MH,"JPC_CapsuleShape_Create");
    }
    public static MemoryAddress JPC_CapsuleShape_Create ( float in_half_height_of_cylinder,  float in_radius,  Addressable in_material) {
        var mh$ = JPC_CapsuleShape_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_height_of_cylinder, in_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShape_GetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$33.JPC_CapsuleShape_GetRadius$MH,"JPC_CapsuleShape_GetRadius");
    }
    public static float JPC_CapsuleShape_GetRadius ( Addressable in_shape) {
        var mh$ = JPC_CapsuleShape_GetRadius$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShape_GetHalfHeightOfCylinder$MH() {
        return RuntimeHelper.requireNonNull(constants$33.JPC_CapsuleShape_GetHalfHeightOfCylinder$MH,"JPC_CapsuleShape_GetHalfHeightOfCylinder");
    }
    public static float JPC_CapsuleShape_GetHalfHeightOfCylinder ( Addressable in_shape) {
        var mh$ = JPC_CapsuleShape_GetHalfHeightOfCylinder$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShape_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$33.JPC_CylinderShape_Create$MH,"JPC_CylinderShape_Create");
    }
    public static MemoryAddress JPC_CylinderShape_Create ( float in_half_height,  float in_radius,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_CylinderShape_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_height, in_radius, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShape_GetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$34.JPC_CylinderShape_GetHalfHeight$MH,"JPC_CylinderShape_GetHalfHeight");
    }
    public static float JPC_CylinderShape_GetHalfHeight ( Addressable in_shape) {
        var mh$ = JPC_CylinderShape_GetHalfHeight$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShape_GetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$34.JPC_CylinderShape_GetRadius$MH,"JPC_CylinderShape_GetRadius");
    }
    public static float JPC_CylinderShape_GetRadius ( Addressable in_shape) {
        var mh$ = JPC_CylinderShape_GetRadius$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ShapeSettings_AddRef$MH() {
        return RuntimeHelper.requireNonNull(constants$34.JPC_ShapeSettings_AddRef$MH,"JPC_ShapeSettings_AddRef");
    }
    public static void JPC_ShapeSettings_AddRef ( Addressable in_settings) {
        var mh$ = JPC_ShapeSettings_AddRef$MH();
        try {
            mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ShapeSettings_Release$MH() {
        return RuntimeHelper.requireNonNull(constants$34.JPC_ShapeSettings_Release$MH,"JPC_ShapeSettings_Release");
    }
    public static void JPC_ShapeSettings_Release ( Addressable in_settings) {
        var mh$ = JPC_ShapeSettings_Release$MH();
        try {
            mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ShapeSettings_GetRefCount$MH() {
        return RuntimeHelper.requireNonNull(constants$34.JPC_ShapeSettings_GetRefCount$MH,"JPC_ShapeSettings_GetRefCount");
    }
    public static int JPC_ShapeSettings_GetRefCount ( Addressable in_settings) {
        var mh$ = JPC_ShapeSettings_GetRefCount$MH();
        try {
            return (int)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ShapeSettings_CreateShape$MH() {
        return RuntimeHelper.requireNonNull(constants$34.JPC_ShapeSettings_CreateShape$MH,"JPC_ShapeSettings_CreateShape");
    }
    public static MemoryAddress JPC_ShapeSettings_CreateShape ( Addressable in_settings) {
        var mh$ = JPC_ShapeSettings_CreateShape$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ShapeSettings_GetUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$35.JPC_ShapeSettings_GetUserData$MH,"JPC_ShapeSettings_GetUserData");
    }
    public static long JPC_ShapeSettings_GetUserData ( Addressable in_settings) {
        var mh$ = JPC_ShapeSettings_GetUserData$MH();
        try {
            return (long)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ShapeSettings_SetUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$35.JPC_ShapeSettings_SetUserData$MH,"JPC_ShapeSettings_SetUserData");
    }
    public static void JPC_ShapeSettings_SetUserData ( Addressable in_settings,  long in_user_data) {
        var mh$ = JPC_ShapeSettings_SetUserData$MH();
        try {
            mh$.invokeExact(in_settings, in_user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShapeSettings_GetMaterial$MH() {
        return RuntimeHelper.requireNonNull(constants$35.JPC_ConvexShapeSettings_GetMaterial$MH,"JPC_ConvexShapeSettings_GetMaterial");
    }
    public static MemoryAddress JPC_ConvexShapeSettings_GetMaterial ( Addressable in_settings) {
        var mh$ = JPC_ConvexShapeSettings_GetMaterial$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShapeSettings_SetMaterial$MH() {
        return RuntimeHelper.requireNonNull(constants$35.JPC_ConvexShapeSettings_SetMaterial$MH,"JPC_ConvexShapeSettings_SetMaterial");
    }
    public static void JPC_ConvexShapeSettings_SetMaterial ( Addressable in_settings,  Addressable in_material) {
        var mh$ = JPC_ConvexShapeSettings_SetMaterial$MH();
        try {
            mh$.invokeExact(in_settings, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShapeSettings_GetDensity$MH() {
        return RuntimeHelper.requireNonNull(constants$35.JPC_ConvexShapeSettings_GetDensity$MH,"JPC_ConvexShapeSettings_GetDensity");
    }
    public static float JPC_ConvexShapeSettings_GetDensity ( Addressable in_settings) {
        var mh$ = JPC_ConvexShapeSettings_GetDensity$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShapeSettings_SetDensity$MH() {
        return RuntimeHelper.requireNonNull(constants$35.JPC_ConvexShapeSettings_SetDensity$MH,"JPC_ConvexShapeSettings_SetDensity");
    }
    public static void JPC_ConvexShapeSettings_SetDensity ( Addressable in_settings,  float in_density) {
        var mh$ = JPC_ConvexShapeSettings_SetDensity$MH();
        try {
            mh$.invokeExact(in_settings, in_density);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$36.JPC_BoxShapeSettings_Create$MH,"JPC_BoxShapeSettings_Create");
    }
    public static MemoryAddress JPC_BoxShapeSettings_Create ( Addressable in_half_extent,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_BoxShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_extent, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShapeSettings_GetHalfExtent$MH() {
        return RuntimeHelper.requireNonNull(constants$36.JPC_BoxShapeSettings_GetHalfExtent$MH,"JPC_BoxShapeSettings_GetHalfExtent");
    }
    public static void JPC_BoxShapeSettings_GetHalfExtent ( Addressable in_settings,  Addressable out_half_extent) {
        var mh$ = JPC_BoxShapeSettings_GetHalfExtent$MH();
        try {
            mh$.invokeExact(in_settings, out_half_extent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShapeSettings_SetHalfExtent$MH() {
        return RuntimeHelper.requireNonNull(constants$36.JPC_BoxShapeSettings_SetHalfExtent$MH,"JPC_BoxShapeSettings_SetHalfExtent");
    }
    public static void JPC_BoxShapeSettings_SetHalfExtent ( Addressable in_settings,  Addressable in_half_extent) {
        var mh$ = JPC_BoxShapeSettings_SetHalfExtent$MH();
        try {
            mh$.invokeExact(in_settings, in_half_extent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShapeSettings_GetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$36.JPC_BoxShapeSettings_GetConvexRadius$MH,"JPC_BoxShapeSettings_GetConvexRadius");
    }
    public static float JPC_BoxShapeSettings_GetConvexRadius ( Addressable in_settings) {
        var mh$ = JPC_BoxShapeSettings_GetConvexRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BoxShapeSettings_SetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$36.JPC_BoxShapeSettings_SetConvexRadius$MH,"JPC_BoxShapeSettings_SetConvexRadius");
    }
    public static void JPC_BoxShapeSettings_SetConvexRadius ( Addressable in_settings,  float in_convex_radius) {
        var mh$ = JPC_BoxShapeSettings_SetConvexRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_convex_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_SphereShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$36.JPC_SphereShapeSettings_Create$MH,"JPC_SphereShapeSettings_Create");
    }
    public static MemoryAddress JPC_SphereShapeSettings_Create ( float in_radius,  Addressable in_material) {
        var mh$ = JPC_SphereShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_SphereShapeSettings_GetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$37.JPC_SphereShapeSettings_GetRadius$MH,"JPC_SphereShapeSettings_GetRadius");
    }
    public static float JPC_SphereShapeSettings_GetRadius ( Addressable in_settings) {
        var mh$ = JPC_SphereShapeSettings_GetRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_SphereShapeSettings_SetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$37.JPC_SphereShapeSettings_SetRadius$MH,"JPC_SphereShapeSettings_SetRadius");
    }
    public static void JPC_SphereShapeSettings_SetRadius ( Addressable in_settings,  float in_radius) {
        var mh$ = JPC_SphereShapeSettings_SetRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$37.JPC_TriangleShapeSettings_Create$MH,"JPC_TriangleShapeSettings_Create");
    }
    public static MemoryAddress JPC_TriangleShapeSettings_Create ( Addressable in_v1,  Addressable in_v2,  Addressable in_v3,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_TriangleShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_v1, in_v2, in_v3, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShapeSettings_SetVertices$MH() {
        return RuntimeHelper.requireNonNull(constants$37.JPC_TriangleShapeSettings_SetVertices$MH,"JPC_TriangleShapeSettings_SetVertices");
    }
    public static void JPC_TriangleShapeSettings_SetVertices ( Addressable in_settings,  Addressable in_v1,  Addressable in_v2,  Addressable in_v3) {
        var mh$ = JPC_TriangleShapeSettings_SetVertices$MH();
        try {
            mh$.invokeExact(in_settings, in_v1, in_v2, in_v3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShapeSettings_GetVertices$MH() {
        return RuntimeHelper.requireNonNull(constants$37.JPC_TriangleShapeSettings_GetVertices$MH,"JPC_TriangleShapeSettings_GetVertices");
    }
    public static void JPC_TriangleShapeSettings_GetVertices ( Addressable in_settings,  Addressable out_v1,  Addressable out_v2,  Addressable out_v3) {
        var mh$ = JPC_TriangleShapeSettings_GetVertices$MH();
        try {
            mh$.invokeExact(in_settings, out_v1, out_v2, out_v3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShapeSettings_GetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$37.JPC_TriangleShapeSettings_GetConvexRadius$MH,"JPC_TriangleShapeSettings_GetConvexRadius");
    }
    public static float JPC_TriangleShapeSettings_GetConvexRadius ( Addressable in_settings) {
        var mh$ = JPC_TriangleShapeSettings_GetConvexRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TriangleShapeSettings_SetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$38.JPC_TriangleShapeSettings_SetConvexRadius$MH,"JPC_TriangleShapeSettings_SetConvexRadius");
    }
    public static void JPC_TriangleShapeSettings_SetConvexRadius ( Addressable in_settings,  float in_convex_radius) {
        var mh$ = JPC_TriangleShapeSettings_SetConvexRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_convex_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$38.JPC_CapsuleShapeSettings_Create$MH,"JPC_CapsuleShapeSettings_Create");
    }
    public static MemoryAddress JPC_CapsuleShapeSettings_Create ( float in_half_height_of_cylinder,  float in_radius,  Addressable in_material) {
        var mh$ = JPC_CapsuleShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_height_of_cylinder, in_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShapeSettings_GetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$38.JPC_CapsuleShapeSettings_GetHalfHeight$MH,"JPC_CapsuleShapeSettings_GetHalfHeight");
    }
    public static float JPC_CapsuleShapeSettings_GetHalfHeight ( Addressable in_settings) {
        var mh$ = JPC_CapsuleShapeSettings_GetHalfHeight$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShapeSettings_SetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$38.JPC_CapsuleShapeSettings_SetHalfHeight$MH,"JPC_CapsuleShapeSettings_SetHalfHeight");
    }
    public static void JPC_CapsuleShapeSettings_SetHalfHeight ( Addressable in_settings,  float in_half_height_of_cylinder) {
        var mh$ = JPC_CapsuleShapeSettings_SetHalfHeight$MH();
        try {
            mh$.invokeExact(in_settings, in_half_height_of_cylinder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShapeSettings_GetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$38.JPC_CapsuleShapeSettings_GetRadius$MH,"JPC_CapsuleShapeSettings_GetRadius");
    }
    public static float JPC_CapsuleShapeSettings_GetRadius ( Addressable in_settings) {
        var mh$ = JPC_CapsuleShapeSettings_GetRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CapsuleShapeSettings_SetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$38.JPC_CapsuleShapeSettings_SetRadius$MH,"JPC_CapsuleShapeSettings_SetRadius");
    }
    public static void JPC_CapsuleShapeSettings_SetRadius ( Addressable in_settings,  float in_radius) {
        var mh$ = JPC_CapsuleShapeSettings_SetRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$39.JPC_TaperedCapsuleShapeSettings_Create$MH,"JPC_TaperedCapsuleShapeSettings_Create");
    }
    public static MemoryAddress JPC_TaperedCapsuleShapeSettings_Create ( float in_half_height,  float in_top_radius,  float in_bottom_radius,  Addressable in_material) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_height, in_top_radius, in_bottom_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_GetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$39.JPC_TaperedCapsuleShapeSettings_GetHalfHeight$MH,"JPC_TaperedCapsuleShapeSettings_GetHalfHeight");
    }
    public static float JPC_TaperedCapsuleShapeSettings_GetHalfHeight ( Addressable in_settings) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_GetHalfHeight$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_SetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$39.JPC_TaperedCapsuleShapeSettings_SetHalfHeight$MH,"JPC_TaperedCapsuleShapeSettings_SetHalfHeight");
    }
    public static void JPC_TaperedCapsuleShapeSettings_SetHalfHeight ( Addressable in_settings,  float in_half_height) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_SetHalfHeight$MH();
        try {
            mh$.invokeExact(in_settings, in_half_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_GetTopRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$39.JPC_TaperedCapsuleShapeSettings_GetTopRadius$MH,"JPC_TaperedCapsuleShapeSettings_GetTopRadius");
    }
    public static float JPC_TaperedCapsuleShapeSettings_GetTopRadius ( Addressable in_settings) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_GetTopRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_SetTopRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$39.JPC_TaperedCapsuleShapeSettings_SetTopRadius$MH,"JPC_TaperedCapsuleShapeSettings_SetTopRadius");
    }
    public static void JPC_TaperedCapsuleShapeSettings_SetTopRadius ( Addressable in_settings,  float in_top_radius) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_SetTopRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_top_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_GetBottomRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$39.JPC_TaperedCapsuleShapeSettings_GetBottomRadius$MH,"JPC_TaperedCapsuleShapeSettings_GetBottomRadius");
    }
    public static float JPC_TaperedCapsuleShapeSettings_GetBottomRadius ( Addressable in_settings) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_GetBottomRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_TaperedCapsuleShapeSettings_SetBottomRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$40.JPC_TaperedCapsuleShapeSettings_SetBottomRadius$MH,"JPC_TaperedCapsuleShapeSettings_SetBottomRadius");
    }
    public static void JPC_TaperedCapsuleShapeSettings_SetBottomRadius ( Addressable in_settings,  float in_bottom_radius) {
        var mh$ = JPC_TaperedCapsuleShapeSettings_SetBottomRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_bottom_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$40.JPC_CylinderShapeSettings_Create$MH,"JPC_CylinderShapeSettings_Create");
    }
    public static MemoryAddress JPC_CylinderShapeSettings_Create ( float in_half_height,  float in_radius,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_CylinderShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_half_height, in_radius, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_GetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$40.JPC_CylinderShapeSettings_GetConvexRadius$MH,"JPC_CylinderShapeSettings_GetConvexRadius");
    }
    public static float JPC_CylinderShapeSettings_GetConvexRadius ( Addressable in_settings) {
        var mh$ = JPC_CylinderShapeSettings_GetConvexRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_SetConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$40.JPC_CylinderShapeSettings_SetConvexRadius$MH,"JPC_CylinderShapeSettings_SetConvexRadius");
    }
    public static void JPC_CylinderShapeSettings_SetConvexRadius ( Addressable in_settings,  float in_convex_radius) {
        var mh$ = JPC_CylinderShapeSettings_SetConvexRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_convex_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_GetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$40.JPC_CylinderShapeSettings_GetHalfHeight$MH,"JPC_CylinderShapeSettings_GetHalfHeight");
    }
    public static float JPC_CylinderShapeSettings_GetHalfHeight ( Addressable in_settings) {
        var mh$ = JPC_CylinderShapeSettings_GetHalfHeight$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_SetHalfHeight$MH() {
        return RuntimeHelper.requireNonNull(constants$40.JPC_CylinderShapeSettings_SetHalfHeight$MH,"JPC_CylinderShapeSettings_SetHalfHeight");
    }
    public static void JPC_CylinderShapeSettings_SetHalfHeight ( Addressable in_settings,  float in_half_height) {
        var mh$ = JPC_CylinderShapeSettings_SetHalfHeight$MH();
        try {
            mh$.invokeExact(in_settings, in_half_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_GetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$41.JPC_CylinderShapeSettings_GetRadius$MH,"JPC_CylinderShapeSettings_GetRadius");
    }
    public static float JPC_CylinderShapeSettings_GetRadius ( Addressable in_settings) {
        var mh$ = JPC_CylinderShapeSettings_GetRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_CylinderShapeSettings_SetRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$41.JPC_CylinderShapeSettings_SetRadius$MH,"JPC_CylinderShapeSettings_SetRadius");
    }
    public static void JPC_CylinderShapeSettings_SetRadius ( Addressable in_settings,  float in_radius) {
        var mh$ = JPC_CylinderShapeSettings_SetRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$41.JPC_ConvexHullShapeSettings_Create$MH,"JPC_ConvexHullShapeSettings_Create");
    }
    public static MemoryAddress JPC_ConvexHullShapeSettings_Create ( Addressable in_vertices,  int in_num_vertices,  int in_vertex_size,  float in_convex_radius,  Addressable in_material) {
        var mh$ = JPC_ConvexHullShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_vertices, in_num_vertices, in_vertex_size, in_convex_radius, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_GetMaxConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$41.JPC_ConvexHullShapeSettings_GetMaxConvexRadius$MH,"JPC_ConvexHullShapeSettings_GetMaxConvexRadius");
    }
    public static float JPC_ConvexHullShapeSettings_GetMaxConvexRadius ( Addressable in_settings) {
        var mh$ = JPC_ConvexHullShapeSettings_GetMaxConvexRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_SetMaxConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$41.JPC_ConvexHullShapeSettings_SetMaxConvexRadius$MH,"JPC_ConvexHullShapeSettings_SetMaxConvexRadius");
    }
    public static void JPC_ConvexHullShapeSettings_SetMaxConvexRadius ( Addressable in_settings,  float in_max_convex_radius) {
        var mh$ = JPC_ConvexHullShapeSettings_SetMaxConvexRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_max_convex_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_GetMaxErrorConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$41.JPC_ConvexHullShapeSettings_GetMaxErrorConvexRadius$MH,"JPC_ConvexHullShapeSettings_GetMaxErrorConvexRadius");
    }
    public static float JPC_ConvexHullShapeSettings_GetMaxErrorConvexRadius ( Addressable in_settings) {
        var mh$ = JPC_ConvexHullShapeSettings_GetMaxErrorConvexRadius$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_SetMaxErrorConvexRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$42.JPC_ConvexHullShapeSettings_SetMaxErrorConvexRadius$MH,"JPC_ConvexHullShapeSettings_SetMaxErrorConvexRadius");
    }
    public static void JPC_ConvexHullShapeSettings_SetMaxErrorConvexRadius ( Addressable in_settings,  float in_max_err_convex_radius) {
        var mh$ = JPC_ConvexHullShapeSettings_SetMaxErrorConvexRadius$MH();
        try {
            mh$.invokeExact(in_settings, in_max_err_convex_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_GetHullTolerance$MH() {
        return RuntimeHelper.requireNonNull(constants$42.JPC_ConvexHullShapeSettings_GetHullTolerance$MH,"JPC_ConvexHullShapeSettings_GetHullTolerance");
    }
    public static float JPC_ConvexHullShapeSettings_GetHullTolerance ( Addressable in_settings) {
        var mh$ = JPC_ConvexHullShapeSettings_GetHullTolerance$MH();
        try {
            return (float)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexHullShapeSettings_SetHullTolerance$MH() {
        return RuntimeHelper.requireNonNull(constants$42.JPC_ConvexHullShapeSettings_SetHullTolerance$MH,"JPC_ConvexHullShapeSettings_SetHullTolerance");
    }
    public static void JPC_ConvexHullShapeSettings_SetHullTolerance ( Addressable in_settings,  float in_hull_tolerance) {
        var mh$ = JPC_ConvexHullShapeSettings_SetHullTolerance$MH();
        try {
            mh$.invokeExact(in_settings, in_hull_tolerance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$42.JPC_HeightFieldShapeSettings_Create$MH,"JPC_HeightFieldShapeSettings_Create");
    }
    public static MemoryAddress JPC_HeightFieldShapeSettings_Create ( Addressable in_samples,  int in_height_field_size,  Addressable in_offset,  Addressable in_scale) {
        var mh$ = JPC_HeightFieldShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_samples, in_height_field_size, in_offset, in_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_GetOffset$MH() {
        return RuntimeHelper.requireNonNull(constants$42.JPC_HeightFieldShapeSettings_GetOffset$MH,"JPC_HeightFieldShapeSettings_GetOffset");
    }
    public static void JPC_HeightFieldShapeSettings_GetOffset ( Addressable in_settings,  Addressable out_offset) {
        var mh$ = JPC_HeightFieldShapeSettings_GetOffset$MH();
        try {
            mh$.invokeExact(in_settings, out_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_SetOffset$MH() {
        return RuntimeHelper.requireNonNull(constants$42.JPC_HeightFieldShapeSettings_SetOffset$MH,"JPC_HeightFieldShapeSettings_SetOffset");
    }
    public static void JPC_HeightFieldShapeSettings_SetOffset ( Addressable in_settings,  Addressable in_offset) {
        var mh$ = JPC_HeightFieldShapeSettings_SetOffset$MH();
        try {
            mh$.invokeExact(in_settings, in_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_GetScale$MH() {
        return RuntimeHelper.requireNonNull(constants$43.JPC_HeightFieldShapeSettings_GetScale$MH,"JPC_HeightFieldShapeSettings_GetScale");
    }
    public static void JPC_HeightFieldShapeSettings_GetScale ( Addressable in_settings,  Addressable out_scale) {
        var mh$ = JPC_HeightFieldShapeSettings_GetScale$MH();
        try {
            mh$.invokeExact(in_settings, out_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_SetScale$MH() {
        return RuntimeHelper.requireNonNull(constants$43.JPC_HeightFieldShapeSettings_SetScale$MH,"JPC_HeightFieldShapeSettings_SetScale");
    }
    public static void JPC_HeightFieldShapeSettings_SetScale ( Addressable in_settings,  Addressable in_scale) {
        var mh$ = JPC_HeightFieldShapeSettings_SetScale$MH();
        try {
            mh$.invokeExact(in_settings, in_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_GetBlockSize$MH() {
        return RuntimeHelper.requireNonNull(constants$43.JPC_HeightFieldShapeSettings_GetBlockSize$MH,"JPC_HeightFieldShapeSettings_GetBlockSize");
    }
    public static int JPC_HeightFieldShapeSettings_GetBlockSize ( Addressable in_settings) {
        var mh$ = JPC_HeightFieldShapeSettings_GetBlockSize$MH();
        try {
            return (int)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_SetBlockSize$MH() {
        return RuntimeHelper.requireNonNull(constants$43.JPC_HeightFieldShapeSettings_SetBlockSize$MH,"JPC_HeightFieldShapeSettings_SetBlockSize");
    }
    public static void JPC_HeightFieldShapeSettings_SetBlockSize ( Addressable in_settings,  int in_block_size) {
        var mh$ = JPC_HeightFieldShapeSettings_SetBlockSize$MH();
        try {
            mh$.invokeExact(in_settings, in_block_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_GetBitsPerSample$MH() {
        return RuntimeHelper.requireNonNull(constants$43.JPC_HeightFieldShapeSettings_GetBitsPerSample$MH,"JPC_HeightFieldShapeSettings_GetBitsPerSample");
    }
    public static int JPC_HeightFieldShapeSettings_GetBitsPerSample ( Addressable in_settings) {
        var mh$ = JPC_HeightFieldShapeSettings_GetBitsPerSample$MH();
        try {
            return (int)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_HeightFieldShapeSettings_SetBitsPerSample$MH() {
        return RuntimeHelper.requireNonNull(constants$43.JPC_HeightFieldShapeSettings_SetBitsPerSample$MH,"JPC_HeightFieldShapeSettings_SetBitsPerSample");
    }
    public static void JPC_HeightFieldShapeSettings_SetBitsPerSample ( Addressable in_settings,  int in_num_bits) {
        var mh$ = JPC_HeightFieldShapeSettings_SetBitsPerSample$MH();
        try {
            mh$.invokeExact(in_settings, in_num_bits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MeshShapeSettings_Create$MH() {
        return RuntimeHelper.requireNonNull(constants$44.JPC_MeshShapeSettings_Create$MH,"JPC_MeshShapeSettings_Create");
    }
    public static MemoryAddress JPC_MeshShapeSettings_Create ( Addressable in_vertices,  int in_num_vertices,  int in_vertex_size,  Addressable in_indices,  int in_num_indices) {
        var mh$ = JPC_MeshShapeSettings_Create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_vertices, in_num_vertices, in_vertex_size, in_indices, in_num_indices);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MeshShapeSettings_GetMaxTrianglesPerLeaf$MH() {
        return RuntimeHelper.requireNonNull(constants$44.JPC_MeshShapeSettings_GetMaxTrianglesPerLeaf$MH,"JPC_MeshShapeSettings_GetMaxTrianglesPerLeaf");
    }
    public static int JPC_MeshShapeSettings_GetMaxTrianglesPerLeaf ( Addressable in_settings) {
        var mh$ = JPC_MeshShapeSettings_GetMaxTrianglesPerLeaf$MH();
        try {
            return (int)mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MeshShapeSettings_SetMaxTrianglesPerLeaf$MH() {
        return RuntimeHelper.requireNonNull(constants$44.JPC_MeshShapeSettings_SetMaxTrianglesPerLeaf$MH,"JPC_MeshShapeSettings_SetMaxTrianglesPerLeaf");
    }
    public static void JPC_MeshShapeSettings_SetMaxTrianglesPerLeaf ( Addressable in_settings,  int in_max_triangles) {
        var mh$ = JPC_MeshShapeSettings_SetMaxTrianglesPerLeaf$MH();
        try {
            mh$.invokeExact(in_settings, in_max_triangles);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_MeshShapeSettings_Sanitize$MH() {
        return RuntimeHelper.requireNonNull(constants$44.JPC_MeshShapeSettings_Sanitize$MH,"JPC_MeshShapeSettings_Sanitize");
    }
    public static void JPC_MeshShapeSettings_Sanitize ( Addressable in_settings) {
        var mh$ = JPC_MeshShapeSettings_Sanitize$MH();
        try {
            mh$.invokeExact(in_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_AddRef$MH() {
        return RuntimeHelper.requireNonNull(constants$44.JPC_Shape_AddRef$MH,"JPC_Shape_AddRef");
    }
    public static void JPC_Shape_AddRef ( Addressable in_shape) {
        var mh$ = JPC_Shape_AddRef$MH();
        try {
            mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_Release$MH() {
        return RuntimeHelper.requireNonNull(constants$44.JPC_Shape_Release$MH,"JPC_Shape_Release");
    }
    public static void JPC_Shape_Release ( Addressable in_shape) {
        var mh$ = JPC_Shape_Release$MH();
        try {
            mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetRefCount$MH() {
        return RuntimeHelper.requireNonNull(constants$45.JPC_Shape_GetRefCount$MH,"JPC_Shape_GetRefCount");
    }
    public static int JPC_Shape_GetRefCount ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetRefCount$MH();
        try {
            return (int)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetType$MH() {
        return RuntimeHelper.requireNonNull(constants$45.JPC_Shape_GetType$MH,"JPC_Shape_GetType");
    }
    public static byte JPC_Shape_GetType ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetType$MH();
        try {
            return (byte)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetSubType$MH() {
        return RuntimeHelper.requireNonNull(constants$45.JPC_Shape_GetSubType$MH,"JPC_Shape_GetSubType");
    }
    public static byte JPC_Shape_GetSubType ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetSubType$MH();
        try {
            return (byte)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$45.JPC_Shape_GetUserData$MH,"JPC_Shape_GetUserData");
    }
    public static long JPC_Shape_GetUserData ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetUserData$MH();
        try {
            return (long)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_SetUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$45.JPC_Shape_SetUserData$MH,"JPC_Shape_SetUserData");
    }
    public static void JPC_Shape_SetUserData ( Addressable in_shape,  long in_user_data) {
        var mh$ = JPC_Shape_SetUserData$MH();
        try {
            mh$.invokeExact(in_shape, in_user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_MustBeStatic$MH() {
        return RuntimeHelper.requireNonNull(constants$45.JPC_Shape_MustBeStatic$MH,"JPC_Shape_MustBeStatic");
    }
    public static boolean JPC_Shape_MustBeStatic ( Addressable in_shape) {
        var mh$ = JPC_Shape_MustBeStatic$MH();
        try {
            return (boolean)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetCenterOfMass$MH() {
        return RuntimeHelper.requireNonNull(constants$46.JPC_Shape_GetCenterOfMass$MH,"JPC_Shape_GetCenterOfMass");
    }
    public static void JPC_Shape_GetCenterOfMass ( Addressable in_shape,  Addressable out_center_of_mass) {
        var mh$ = JPC_Shape_GetCenterOfMass$MH();
        try {
            mh$.invokeExact(in_shape, out_center_of_mass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetLocalBounds$MH() {
        return RuntimeHelper.requireNonNull(constants$46.JPC_Shape_GetLocalBounds$MH,"JPC_Shape_GetLocalBounds");
    }
    public static MemorySegment JPC_Shape_GetLocalBounds ( SegmentAllocator allocator,  Addressable in_shape) {
        var mh$ = JPC_Shape_GetLocalBounds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetSubShapeIDBitsRecursive$MH() {
        return RuntimeHelper.requireNonNull(constants$46.JPC_Shape_GetSubShapeIDBitsRecursive$MH,"JPC_Shape_GetSubShapeIDBitsRecursive");
    }
    public static int JPC_Shape_GetSubShapeIDBitsRecursive ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetSubShapeIDBitsRecursive$MH();
        try {
            return (int)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetWorldSpaceBounds$MH() {
        return RuntimeHelper.requireNonNull(constants$46.JPC_Shape_GetWorldSpaceBounds$MH,"JPC_Shape_GetWorldSpaceBounds");
    }
    public static MemorySegment JPC_Shape_GetWorldSpaceBounds ( SegmentAllocator allocator,  Addressable in_shape,  Addressable in_center_of_mass_transform,  Addressable in_scale) {
        var mh$ = JPC_Shape_GetWorldSpaceBounds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, in_shape, in_center_of_mass_transform, in_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetInnerRadius$MH() {
        return RuntimeHelper.requireNonNull(constants$46.JPC_Shape_GetInnerRadius$MH,"JPC_Shape_GetInnerRadius");
    }
    public static float JPC_Shape_GetInnerRadius ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetInnerRadius$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetMaterial$MH() {
        return RuntimeHelper.requireNonNull(constants$46.JPC_Shape_GetMaterial$MH,"JPC_Shape_GetMaterial");
    }
    public static MemoryAddress JPC_Shape_GetMaterial ( Addressable in_shape,  int in_sub_shape_id) {
        var mh$ = JPC_Shape_GetMaterial$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_shape, in_sub_shape_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetSurfaceNormal$MH() {
        return RuntimeHelper.requireNonNull(constants$47.JPC_Shape_GetSurfaceNormal$MH,"JPC_Shape_GetSurfaceNormal");
    }
    public static void JPC_Shape_GetSurfaceNormal ( Addressable in_shape,  int in_sub_shape_id,  Addressable in_local_surface_position,  Addressable out_surface_normal) {
        var mh$ = JPC_Shape_GetSurfaceNormal$MH();
        try {
            mh$.invokeExact(in_shape, in_sub_shape_id, in_local_surface_position, out_surface_normal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetSubShapeUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$47.JPC_Shape_GetSubShapeUserData$MH,"JPC_Shape_GetSubShapeUserData");
    }
    public static long JPC_Shape_GetSubShapeUserData ( Addressable in_shape,  int in_sub_shape_id) {
        var mh$ = JPC_Shape_GetSubShapeUserData$MH();
        try {
            return (long)mh$.invokeExact(in_shape, in_sub_shape_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_GetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$47.JPC_Shape_GetVolume$MH,"JPC_Shape_GetVolume");
    }
    public static float JPC_Shape_GetVolume ( Addressable in_shape) {
        var mh$ = JPC_Shape_GetVolume$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Shape_IsValidScale$MH() {
        return RuntimeHelper.requireNonNull(constants$47.JPC_Shape_IsValidScale$MH,"JPC_Shape_IsValidScale");
    }
    public static boolean JPC_Shape_IsValidScale ( Addressable in_shape,  Addressable in_scale) {
        var mh$ = JPC_Shape_IsValidScale$MH();
        try {
            return (boolean)mh$.invokeExact(in_shape, in_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShape_SetMaterial$MH() {
        return RuntimeHelper.requireNonNull(constants$47.JPC_ConvexShape_SetMaterial$MH,"JPC_ConvexShape_SetMaterial");
    }
    public static void JPC_ConvexShape_SetMaterial ( Addressable in_shape,  Addressable in_material) {
        var mh$ = JPC_ConvexShape_SetMaterial$MH();
        try {
            mh$.invokeExact(in_shape, in_material);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShape_GetMaterial$MH() {
        return RuntimeHelper.requireNonNull(constants$47.JPC_ConvexShape_GetMaterial$MH,"JPC_ConvexShape_GetMaterial");
    }
    public static MemoryAddress JPC_ConvexShape_GetMaterial ( Addressable in_shape) {
        var mh$ = JPC_ConvexShape_GetMaterial$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShape_SetDensity$MH() {
        return RuntimeHelper.requireNonNull(constants$48.JPC_ConvexShape_SetDensity$MH,"JPC_ConvexShape_SetDensity");
    }
    public static void JPC_ConvexShape_SetDensity ( Addressable in_shape,  float in_density) {
        var mh$ = JPC_ConvexShape_SetDensity$MH();
        try {
            mh$.invokeExact(in_shape, in_density);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_ConvexShape_GetDensity$MH() {
        return RuntimeHelper.requireNonNull(constants$48.JPC_ConvexShape_GetDensity$MH,"JPC_ConvexShape_GetDensity");
    }
    public static float JPC_ConvexShape_GetDensity ( Addressable in_shape) {
        var mh$ = JPC_ConvexShape_GetDensity$MH();
        try {
            return (float)mh$.invokeExact(in_shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_CreateBody$MH() {
        return RuntimeHelper.requireNonNull(constants$48.JPC_BodyInterface_CreateBody$MH,"JPC_BodyInterface_CreateBody");
    }
    public static MemoryAddress JPC_BodyInterface_CreateBody ( Addressable in_iface,  Addressable in_setting) {
        var mh$ = JPC_BodyInterface_CreateBody$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_iface, in_setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_DestroyBody$MH() {
        return RuntimeHelper.requireNonNull(constants$48.JPC_BodyInterface_DestroyBody$MH,"JPC_BodyInterface_DestroyBody");
    }
    public static void JPC_BodyInterface_DestroyBody ( Addressable in_iface,  int in_body_id) {
        var mh$ = JPC_BodyInterface_DestroyBody$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddBody$MH() {
        return RuntimeHelper.requireNonNull(constants$48.JPC_BodyInterface_AddBody$MH,"JPC_BodyInterface_AddBody");
    }
    public static void JPC_BodyInterface_AddBody ( Addressable in_iface,  int in_body_id,  int in_mode) {
        var mh$ = JPC_BodyInterface_AddBody$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_RemoveBody$MH() {
        return RuntimeHelper.requireNonNull(constants$48.JPC_BodyInterface_RemoveBody$MH,"JPC_BodyInterface_RemoveBody");
    }
    public static void JPC_BodyInterface_RemoveBody ( Addressable in_iface,  int in_body_id) {
        var mh$ = JPC_BodyInterface_RemoveBody$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_CreateAndAddBody$MH() {
        return RuntimeHelper.requireNonNull(constants$49.JPC_BodyInterface_CreateAndAddBody$MH,"JPC_BodyInterface_CreateAndAddBody");
    }
    public static int JPC_BodyInterface_CreateAndAddBody ( Addressable in_iface,  Addressable in_settings,  int in_mode) {
        var mh$ = JPC_BodyInterface_CreateAndAddBody$MH();
        try {
            return (int)mh$.invokeExact(in_iface, in_settings, in_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_IsAdded$MH() {
        return RuntimeHelper.requireNonNull(constants$49.JPC_BodyInterface_IsAdded$MH,"JPC_BodyInterface_IsAdded");
    }
    public static boolean JPC_BodyInterface_IsAdded ( Addressable in_iface,  int in_body_id) {
        var mh$ = JPC_BodyInterface_IsAdded$MH();
        try {
            return (boolean)mh$.invokeExact(in_iface, in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_SetLinearAndAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$49.JPC_BodyInterface_SetLinearAndAngularVelocity$MH,"JPC_BodyInterface_SetLinearAndAngularVelocity");
    }
    public static void JPC_BodyInterface_SetLinearAndAngularVelocity ( Addressable in_iface,  int in_body_id,  Addressable in_linear_velocity,  Addressable in_angular_velocity) {
        var mh$ = JPC_BodyInterface_SetLinearAndAngularVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_linear_velocity, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_GetLinearAndAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$49.JPC_BodyInterface_GetLinearAndAngularVelocity$MH,"JPC_BodyInterface_GetLinearAndAngularVelocity");
    }
    public static void JPC_BodyInterface_GetLinearAndAngularVelocity ( Addressable in_iface,  int in_body_id,  Addressable out_linear_velocity,  Addressable out_angular_velocity) {
        var mh$ = JPC_BodyInterface_GetLinearAndAngularVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, out_linear_velocity, out_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_SetLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$49.JPC_BodyInterface_SetLinearVelocity$MH,"JPC_BodyInterface_SetLinearVelocity");
    }
    public static void JPC_BodyInterface_SetLinearVelocity ( Addressable in_iface,  int in_body_id,  Addressable in_velocity) {
        var mh$ = JPC_BodyInterface_SetLinearVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_GetLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$49.JPC_BodyInterface_GetLinearVelocity$MH,"JPC_BodyInterface_GetLinearVelocity");
    }
    public static void JPC_BodyInterface_GetLinearVelocity ( Addressable in_iface,  int in_body_id,  Addressable out_velocity) {
        var mh$ = JPC_BodyInterface_GetLinearVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, out_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$50.JPC_BodyInterface_AddLinearVelocity$MH,"JPC_BodyInterface_AddLinearVelocity");
    }
    public static void JPC_BodyInterface_AddLinearVelocity ( Addressable in_iface,  int in_body_id,  Addressable in_velocity) {
        var mh$ = JPC_BodyInterface_AddLinearVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddLinearAndAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$50.JPC_BodyInterface_AddLinearAndAngularVelocity$MH,"JPC_BodyInterface_AddLinearAndAngularVelocity");
    }
    public static void JPC_BodyInterface_AddLinearAndAngularVelocity ( Addressable in_iface,  int in_body_id,  Addressable in_linear_velocity,  Addressable in_angular_velocity) {
        var mh$ = JPC_BodyInterface_AddLinearAndAngularVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_linear_velocity, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_SetAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$50.JPC_BodyInterface_SetAngularVelocity$MH,"JPC_BodyInterface_SetAngularVelocity");
    }
    public static void JPC_BodyInterface_SetAngularVelocity ( Addressable in_iface,  int in_body_id,  Addressable in_velocity) {
        var mh$ = JPC_BodyInterface_SetAngularVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_GetAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$50.JPC_BodyInterface_GetAngularVelocity$MH,"JPC_BodyInterface_GetAngularVelocity");
    }
    public static void JPC_BodyInterface_GetAngularVelocity ( Addressable in_iface,  int in_body_id,  Addressable out_velocity) {
        var mh$ = JPC_BodyInterface_GetAngularVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, out_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_GetPointVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$50.JPC_BodyInterface_GetPointVelocity$MH,"JPC_BodyInterface_GetPointVelocity");
    }
    public static void JPC_BodyInterface_GetPointVelocity ( Addressable in_iface,  Addressable in_point,  Addressable out_velocity) {
        var mh$ = JPC_BodyInterface_GetPointVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_point, out_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_GetCenterOfMassPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$50.JPC_BodyInterface_GetCenterOfMassPosition$MH,"JPC_BodyInterface_GetCenterOfMassPosition");
    }
    public static void JPC_BodyInterface_GetCenterOfMassPosition ( Addressable in_iface,  int in_body_id,  Addressable out_position) {
        var mh$ = JPC_BodyInterface_GetCenterOfMassPosition$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, out_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_IsActive$MH() {
        return RuntimeHelper.requireNonNull(constants$51.JPC_BodyInterface_IsActive$MH,"JPC_BodyInterface_IsActive");
    }
    public static boolean JPC_BodyInterface_IsActive ( Addressable in_iface,  int in_body_id) {
        var mh$ = JPC_BodyInterface_IsActive$MH();
        try {
            return (boolean)mh$.invokeExact(in_iface, in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_SetPositionRotationAndVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$51.JPC_BodyInterface_SetPositionRotationAndVelocity$MH,"JPC_BodyInterface_SetPositionRotationAndVelocity");
    }
    public static void JPC_BodyInterface_SetPositionRotationAndVelocity ( Addressable in_iface,  int in_body_id,  Addressable in_position,  Addressable in_rotation,  Addressable in_linear_velocity,  Addressable in_angular_velocity) {
        var mh$ = JPC_BodyInterface_SetPositionRotationAndVelocity$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_position, in_rotation, in_linear_velocity, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddForce$MH() {
        return RuntimeHelper.requireNonNull(constants$51.JPC_BodyInterface_AddForce$MH,"JPC_BodyInterface_AddForce");
    }
    public static void JPC_BodyInterface_AddForce ( Addressable in_iface,  int in_body_id,  Addressable in_force) {
        var mh$ = JPC_BodyInterface_AddForce$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_force);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddForceAtPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$51.JPC_BodyInterface_AddForceAtPosition$MH,"JPC_BodyInterface_AddForceAtPosition");
    }
    public static void JPC_BodyInterface_AddForceAtPosition ( Addressable in_iface,  int in_body_id,  Addressable in_force,  Addressable in_position) {
        var mh$ = JPC_BodyInterface_AddForceAtPosition$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_force, in_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddTorque$MH() {
        return RuntimeHelper.requireNonNull(constants$51.JPC_BodyInterface_AddTorque$MH,"JPC_BodyInterface_AddTorque");
    }
    public static void JPC_BodyInterface_AddTorque ( Addressable in_iface,  int in_body_id,  Addressable in_torque) {
        var mh$ = JPC_BodyInterface_AddTorque$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_torque);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddForceAndTorque$MH() {
        return RuntimeHelper.requireNonNull(constants$51.JPC_BodyInterface_AddForceAndTorque$MH,"JPC_BodyInterface_AddForceAndTorque");
    }
    public static void JPC_BodyInterface_AddForceAndTorque ( Addressable in_iface,  int in_body_id,  Addressable in_force,  Addressable in_torque) {
        var mh$ = JPC_BodyInterface_AddForceAndTorque$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_force, in_torque);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddImpulse$MH() {
        return RuntimeHelper.requireNonNull(constants$52.JPC_BodyInterface_AddImpulse$MH,"JPC_BodyInterface_AddImpulse");
    }
    public static void JPC_BodyInterface_AddImpulse ( Addressable in_iface,  int in_body_id,  Addressable in_impulse) {
        var mh$ = JPC_BodyInterface_AddImpulse$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_impulse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddImpulseAtPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$52.JPC_BodyInterface_AddImpulseAtPosition$MH,"JPC_BodyInterface_AddImpulseAtPosition");
    }
    public static void JPC_BodyInterface_AddImpulseAtPosition ( Addressable in_iface,  int in_body_id,  Addressable in_impulse,  Addressable in_position) {
        var mh$ = JPC_BodyInterface_AddImpulseAtPosition$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_impulse, in_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyInterface_AddAngularImpulse$MH() {
        return RuntimeHelper.requireNonNull(constants$52.JPC_BodyInterface_AddAngularImpulse$MH,"JPC_BodyInterface_AddAngularImpulse");
    }
    public static void JPC_BodyInterface_AddAngularImpulse ( Addressable in_iface,  int in_body_id,  Addressable in_impulse) {
        var mh$ = JPC_BodyInterface_AddAngularImpulse$MH();
        try {
            mh$.invokeExact(in_iface, in_body_id, in_impulse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetID$MH() {
        return RuntimeHelper.requireNonNull(constants$52.JPC_Body_GetID$MH,"JPC_Body_GetID");
    }
    public static int JPC_Body_GetID ( Addressable in_body) {
        var mh$ = JPC_Body_GetID$MH();
        try {
            return (int)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsActive$MH() {
        return RuntimeHelper.requireNonNull(constants$52.JPC_Body_IsActive$MH,"JPC_Body_IsActive");
    }
    public static boolean JPC_Body_IsActive ( Addressable in_body) {
        var mh$ = JPC_Body_IsActive$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsStatic$MH() {
        return RuntimeHelper.requireNonNull(constants$52.JPC_Body_IsStatic$MH,"JPC_Body_IsStatic");
    }
    public static boolean JPC_Body_IsStatic ( Addressable in_body) {
        var mh$ = JPC_Body_IsStatic$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsKinematic$MH() {
        return RuntimeHelper.requireNonNull(constants$53.JPC_Body_IsKinematic$MH,"JPC_Body_IsKinematic");
    }
    public static boolean JPC_Body_IsKinematic ( Addressable in_body) {
        var mh$ = JPC_Body_IsKinematic$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsDynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$53.JPC_Body_IsDynamic$MH,"JPC_Body_IsDynamic");
    }
    public static boolean JPC_Body_IsDynamic ( Addressable in_body) {
        var mh$ = JPC_Body_IsDynamic$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_CanBeKinematicOrDynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$53.JPC_Body_CanBeKinematicOrDynamic$MH,"JPC_Body_CanBeKinematicOrDynamic");
    }
    public static boolean JPC_Body_CanBeKinematicOrDynamic ( Addressable in_body) {
        var mh$ = JPC_Body_CanBeKinematicOrDynamic$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetIsSensor$MH() {
        return RuntimeHelper.requireNonNull(constants$53.JPC_Body_SetIsSensor$MH,"JPC_Body_SetIsSensor");
    }
    public static void JPC_Body_SetIsSensor ( Addressable in_body,  boolean in_is_sensor) {
        var mh$ = JPC_Body_SetIsSensor$MH();
        try {
            mh$.invokeExact(in_body, in_is_sensor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsSensor$MH() {
        return RuntimeHelper.requireNonNull(constants$53.JPC_Body_IsSensor$MH,"JPC_Body_IsSensor");
    }
    public static boolean JPC_Body_IsSensor ( Addressable in_body) {
        var mh$ = JPC_Body_IsSensor$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetMotionType$MH() {
        return RuntimeHelper.requireNonNull(constants$53.JPC_Body_GetMotionType$MH,"JPC_Body_GetMotionType");
    }
    public static byte JPC_Body_GetMotionType ( Addressable in_body) {
        var mh$ = JPC_Body_GetMotionType$MH();
        try {
            return (byte)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetMotionType$MH() {
        return RuntimeHelper.requireNonNull(constants$54.JPC_Body_SetMotionType$MH,"JPC_Body_SetMotionType");
    }
    public static void JPC_Body_SetMotionType ( Addressable in_body,  byte in_motion_type) {
        var mh$ = JPC_Body_SetMotionType$MH();
        try {
            mh$.invokeExact(in_body, in_motion_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetBroadPhaseLayer$MH() {
        return RuntimeHelper.requireNonNull(constants$54.JPC_Body_GetBroadPhaseLayer$MH,"JPC_Body_GetBroadPhaseLayer");
    }
    public static byte JPC_Body_GetBroadPhaseLayer ( Addressable in_body) {
        var mh$ = JPC_Body_GetBroadPhaseLayer$MH();
        try {
            return (byte)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetObjectLayer$MH() {
        return RuntimeHelper.requireNonNull(constants$54.JPC_Body_GetObjectLayer$MH,"JPC_Body_GetObjectLayer");
    }
    public static short JPC_Body_GetObjectLayer ( Addressable in_body) {
        var mh$ = JPC_Body_GetObjectLayer$MH();
        try {
            return (short)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetCollisionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$54.JPC_Body_GetCollisionGroup$MH,"JPC_Body_GetCollisionGroup");
    }
    public static MemoryAddress JPC_Body_GetCollisionGroup ( Addressable in_body) {
        var mh$ = JPC_Body_GetCollisionGroup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetCollisionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$54.JPC_Body_SetCollisionGroup$MH,"JPC_Body_SetCollisionGroup");
    }
    public static void JPC_Body_SetCollisionGroup ( Addressable in_body,  Addressable in_group) {
        var mh$ = JPC_Body_SetCollisionGroup$MH();
        try {
            mh$.invokeExact(in_body, in_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetAllowSleeping$MH() {
        return RuntimeHelper.requireNonNull(constants$54.JPC_Body_GetAllowSleeping$MH,"JPC_Body_GetAllowSleeping");
    }
    public static boolean JPC_Body_GetAllowSleeping ( Addressable in_body) {
        var mh$ = JPC_Body_GetAllowSleeping$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetAllowSleeping$MH() {
        return RuntimeHelper.requireNonNull(constants$55.JPC_Body_SetAllowSleeping$MH,"JPC_Body_SetAllowSleeping");
    }
    public static void JPC_Body_SetAllowSleeping ( Addressable in_body,  boolean in_allow_sleeping) {
        var mh$ = JPC_Body_SetAllowSleeping$MH();
        try {
            mh$.invokeExact(in_body, in_allow_sleeping);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetFriction$MH() {
        return RuntimeHelper.requireNonNull(constants$55.JPC_Body_GetFriction$MH,"JPC_Body_GetFriction");
    }
    public static float JPC_Body_GetFriction ( Addressable in_body) {
        var mh$ = JPC_Body_GetFriction$MH();
        try {
            return (float)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetFriction$MH() {
        return RuntimeHelper.requireNonNull(constants$55.JPC_Body_SetFriction$MH,"JPC_Body_SetFriction");
    }
    public static void JPC_Body_SetFriction ( Addressable in_body,  float in_friction) {
        var mh$ = JPC_Body_SetFriction$MH();
        try {
            mh$.invokeExact(in_body, in_friction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetRestitution$MH() {
        return RuntimeHelper.requireNonNull(constants$55.JPC_Body_GetRestitution$MH,"JPC_Body_GetRestitution");
    }
    public static float JPC_Body_GetRestitution ( Addressable in_body) {
        var mh$ = JPC_Body_GetRestitution$MH();
        try {
            return (float)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetRestitution$MH() {
        return RuntimeHelper.requireNonNull(constants$55.JPC_Body_SetRestitution$MH,"JPC_Body_SetRestitution");
    }
    public static void JPC_Body_SetRestitution ( Addressable in_body,  float in_restitution) {
        var mh$ = JPC_Body_SetRestitution$MH();
        try {
            mh$.invokeExact(in_body, in_restitution);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$55.JPC_Body_GetLinearVelocity$MH,"JPC_Body_GetLinearVelocity");
    }
    public static void JPC_Body_GetLinearVelocity ( Addressable in_body,  Addressable out_linear_velocity) {
        var mh$ = JPC_Body_GetLinearVelocity$MH();
        try {
            mh$.invokeExact(in_body, out_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetLinearVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$56.JPC_Body_SetLinearVelocity$MH,"JPC_Body_SetLinearVelocity");
    }
    public static void JPC_Body_SetLinearVelocity ( Addressable in_body,  Addressable in_linear_velocity) {
        var mh$ = JPC_Body_SetLinearVelocity$MH();
        try {
            mh$.invokeExact(in_body, in_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetLinearVelocityClamped$MH() {
        return RuntimeHelper.requireNonNull(constants$56.JPC_Body_SetLinearVelocityClamped$MH,"JPC_Body_SetLinearVelocityClamped");
    }
    public static void JPC_Body_SetLinearVelocityClamped ( Addressable in_body,  Addressable in_linear_velocity) {
        var mh$ = JPC_Body_SetLinearVelocityClamped$MH();
        try {
            mh$.invokeExact(in_body, in_linear_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$56.JPC_Body_GetAngularVelocity$MH,"JPC_Body_GetAngularVelocity");
    }
    public static void JPC_Body_GetAngularVelocity ( Addressable in_body,  Addressable out_angular_velocity) {
        var mh$ = JPC_Body_GetAngularVelocity$MH();
        try {
            mh$.invokeExact(in_body, out_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetAngularVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$56.JPC_Body_SetAngularVelocity$MH,"JPC_Body_SetAngularVelocity");
    }
    public static void JPC_Body_SetAngularVelocity ( Addressable in_body,  Addressable in_angular_velocity) {
        var mh$ = JPC_Body_SetAngularVelocity$MH();
        try {
            mh$.invokeExact(in_body, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetAngularVelocityClamped$MH() {
        return RuntimeHelper.requireNonNull(constants$56.JPC_Body_SetAngularVelocityClamped$MH,"JPC_Body_SetAngularVelocityClamped");
    }
    public static void JPC_Body_SetAngularVelocityClamped ( Addressable in_body,  Addressable in_angular_velocity) {
        var mh$ = JPC_Body_SetAngularVelocityClamped$MH();
        try {
            mh$.invokeExact(in_body, in_angular_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetPointVelocityCOM$MH() {
        return RuntimeHelper.requireNonNull(constants$56.JPC_Body_GetPointVelocityCOM$MH,"JPC_Body_GetPointVelocityCOM");
    }
    public static void JPC_Body_GetPointVelocityCOM ( Addressable in_body,  Addressable in_point_relative_to_com,  Addressable out_velocity) {
        var mh$ = JPC_Body_GetPointVelocityCOM$MH();
        try {
            mh$.invokeExact(in_body, in_point_relative_to_com, out_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetPointVelocity$MH() {
        return RuntimeHelper.requireNonNull(constants$57.JPC_Body_GetPointVelocity$MH,"JPC_Body_GetPointVelocity");
    }
    public static void JPC_Body_GetPointVelocity ( Addressable in_body,  Addressable in_point,  Addressable out_velocity) {
        var mh$ = JPC_Body_GetPointVelocity$MH();
        try {
            mh$.invokeExact(in_body, in_point, out_velocity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_AddForce$MH() {
        return RuntimeHelper.requireNonNull(constants$57.JPC_Body_AddForce$MH,"JPC_Body_AddForce");
    }
    public static void JPC_Body_AddForce ( Addressable in_body,  Addressable in_force) {
        var mh$ = JPC_Body_AddForce$MH();
        try {
            mh$.invokeExact(in_body, in_force);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_AddForceAtPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$57.JPC_Body_AddForceAtPosition$MH,"JPC_Body_AddForceAtPosition");
    }
    public static void JPC_Body_AddForceAtPosition ( Addressable in_body,  Addressable in_force,  Addressable in_position) {
        var mh$ = JPC_Body_AddForceAtPosition$MH();
        try {
            mh$.invokeExact(in_body, in_force, in_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_AddTorque$MH() {
        return RuntimeHelper.requireNonNull(constants$57.JPC_Body_AddTorque$MH,"JPC_Body_AddTorque");
    }
    public static void JPC_Body_AddTorque ( Addressable in_body,  Addressable in_torque) {
        var mh$ = JPC_Body_AddTorque$MH();
        try {
            mh$.invokeExact(in_body, in_torque);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetInverseInertia$MH() {
        return RuntimeHelper.requireNonNull(constants$57.JPC_Body_GetInverseInertia$MH,"JPC_Body_GetInverseInertia");
    }
    public static void JPC_Body_GetInverseInertia ( Addressable in_body,  Addressable out_inverse_inertia) {
        var mh$ = JPC_Body_GetInverseInertia$MH();
        try {
            mh$.invokeExact(in_body, out_inverse_inertia);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_AddImpulse$MH() {
        return RuntimeHelper.requireNonNull(constants$57.JPC_Body_AddImpulse$MH,"JPC_Body_AddImpulse");
    }
    public static void JPC_Body_AddImpulse ( Addressable in_body,  Addressable in_impulse) {
        var mh$ = JPC_Body_AddImpulse$MH();
        try {
            mh$.invokeExact(in_body, in_impulse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_AddImpulseAtPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$58.JPC_Body_AddImpulseAtPosition$MH,"JPC_Body_AddImpulseAtPosition");
    }
    public static void JPC_Body_AddImpulseAtPosition ( Addressable in_body,  Addressable in_impulse,  Addressable in_position) {
        var mh$ = JPC_Body_AddImpulseAtPosition$MH();
        try {
            mh$.invokeExact(in_body, in_impulse, in_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_AddAngularImpulse$MH() {
        return RuntimeHelper.requireNonNull(constants$58.JPC_Body_AddAngularImpulse$MH,"JPC_Body_AddAngularImpulse");
    }
    public static void JPC_Body_AddAngularImpulse ( Addressable in_body,  Addressable in_angular_impulse) {
        var mh$ = JPC_Body_AddAngularImpulse$MH();
        try {
            mh$.invokeExact(in_body, in_angular_impulse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_MoveKinematic$MH() {
        return RuntimeHelper.requireNonNull(constants$58.JPC_Body_MoveKinematic$MH,"JPC_Body_MoveKinematic");
    }
    public static void JPC_Body_MoveKinematic ( Addressable in_body,  Addressable in_target_position,  Addressable in_target_rotation,  float in_delta_time) {
        var mh$ = JPC_Body_MoveKinematic$MH();
        try {
            mh$.invokeExact(in_body, in_target_position, in_target_rotation, in_delta_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_ApplyBuoyancyImpulse$MH() {
        return RuntimeHelper.requireNonNull(constants$58.JPC_Body_ApplyBuoyancyImpulse$MH,"JPC_Body_ApplyBuoyancyImpulse");
    }
    public static void JPC_Body_ApplyBuoyancyImpulse ( Addressable in_body,  Addressable in_surface_position,  Addressable in_surface_normal,  float in_buoyancy,  float in_linear_drag,  float in_angular_drag,  Addressable in_fluid_velocity,  Addressable in_gravity,  float in_delta_time) {
        var mh$ = JPC_Body_ApplyBuoyancyImpulse$MH();
        try {
            mh$.invokeExact(in_body, in_surface_position, in_surface_normal, in_buoyancy, in_linear_drag, in_angular_drag, in_fluid_velocity, in_gravity, in_delta_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsInBroadPhase$MH() {
        return RuntimeHelper.requireNonNull(constants$58.JPC_Body_IsInBroadPhase$MH,"JPC_Body_IsInBroadPhase");
    }
    public static boolean JPC_Body_IsInBroadPhase ( Addressable in_body) {
        var mh$ = JPC_Body_IsInBroadPhase$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_IsCollisionCacheInvalid$MH() {
        return RuntimeHelper.requireNonNull(constants$58.JPC_Body_IsCollisionCacheInvalid$MH,"JPC_Body_IsCollisionCacheInvalid");
    }
    public static boolean JPC_Body_IsCollisionCacheInvalid ( Addressable in_body) {
        var mh$ = JPC_Body_IsCollisionCacheInvalid$MH();
        try {
            return (boolean)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetShape$MH() {
        return RuntimeHelper.requireNonNull(constants$59.JPC_Body_GetShape$MH,"JPC_Body_GetShape");
    }
    public static MemoryAddress JPC_Body_GetShape ( Addressable in_body) {
        var mh$ = JPC_Body_GetShape$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$59.JPC_Body_GetPosition$MH,"JPC_Body_GetPosition");
    }
    public static void JPC_Body_GetPosition ( Addressable in_body,  Addressable out_position) {
        var mh$ = JPC_Body_GetPosition$MH();
        try {
            mh$.invokeExact(in_body, out_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetRotation$MH() {
        return RuntimeHelper.requireNonNull(constants$59.JPC_Body_GetRotation$MH,"JPC_Body_GetRotation");
    }
    public static void JPC_Body_GetRotation ( Addressable in_body,  Addressable out_rotation) {
        var mh$ = JPC_Body_GetRotation$MH();
        try {
            mh$.invokeExact(in_body, out_rotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetWorldTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$59.JPC_Body_GetWorldTransform$MH,"JPC_Body_GetWorldTransform");
    }
    public static void JPC_Body_GetWorldTransform ( Addressable in_body,  Addressable out_rotation,  Addressable out_translation) {
        var mh$ = JPC_Body_GetWorldTransform$MH();
        try {
            mh$.invokeExact(in_body, out_rotation, out_translation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetCenterOfMassPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$59.JPC_Body_GetCenterOfMassPosition$MH,"JPC_Body_GetCenterOfMassPosition");
    }
    public static void JPC_Body_GetCenterOfMassPosition ( Addressable in_body,  Addressable out_position) {
        var mh$ = JPC_Body_GetCenterOfMassPosition$MH();
        try {
            mh$.invokeExact(in_body, out_position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetCenterOfMassTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$59.JPC_Body_GetCenterOfMassTransform$MH,"JPC_Body_GetCenterOfMassTransform");
    }
    public static void JPC_Body_GetCenterOfMassTransform ( Addressable in_body,  Addressable out_rotation,  Addressable out_translation) {
        var mh$ = JPC_Body_GetCenterOfMassTransform$MH();
        try {
            mh$.invokeExact(in_body, out_rotation, out_translation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetInverseCenterOfMassTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$60.JPC_Body_GetInverseCenterOfMassTransform$MH,"JPC_Body_GetInverseCenterOfMassTransform");
    }
    public static void JPC_Body_GetInverseCenterOfMassTransform ( Addressable in_body,  Addressable out_rotation,  Addressable out_translation) {
        var mh$ = JPC_Body_GetInverseCenterOfMassTransform$MH();
        try {
            mh$.invokeExact(in_body, out_rotation, out_translation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetWorldSpaceBounds$MH() {
        return RuntimeHelper.requireNonNull(constants$60.JPC_Body_GetWorldSpaceBounds$MH,"JPC_Body_GetWorldSpaceBounds");
    }
    public static void JPC_Body_GetWorldSpaceBounds ( Addressable in_body,  Addressable out_min,  Addressable out_max) {
        var mh$ = JPC_Body_GetWorldSpaceBounds$MH();
        try {
            mh$.invokeExact(in_body, out_min, out_max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetMotionProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$60.JPC_Body_GetMotionProperties$MH,"JPC_Body_GetMotionProperties");
    }
    public static MemoryAddress JPC_Body_GetMotionProperties ( Addressable in_body) {
        var mh$ = JPC_Body_GetMotionProperties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$60.JPC_Body_GetUserData$MH,"JPC_Body_GetUserData");
    }
    public static long JPC_Body_GetUserData ( Addressable in_body) {
        var mh$ = JPC_Body_GetUserData$MH();
        try {
            return (long)mh$.invokeExact(in_body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_SetUserData$MH() {
        return RuntimeHelper.requireNonNull(constants$60.JPC_Body_SetUserData$MH,"JPC_Body_SetUserData");
    }
    public static void JPC_Body_SetUserData ( Addressable in_body,  long in_user_data) {
        var mh$ = JPC_Body_SetUserData$MH();
        try {
            mh$.invokeExact(in_body, in_user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_Body_GetWorldSpaceSurfaceNormal$MH() {
        return RuntimeHelper.requireNonNull(constants$60.JPC_Body_GetWorldSpaceSurfaceNormal$MH,"JPC_Body_GetWorldSpaceSurfaceNormal");
    }
    public static void JPC_Body_GetWorldSpaceSurfaceNormal ( Addressable in_body,  int in_sub_shape_id,  Addressable in_position,  Addressable out_normal_vector) {
        var mh$ = JPC_Body_GetWorldSpaceSurfaceNormal$MH();
        try {
            mh$.invokeExact(in_body, in_sub_shape_id, in_position, out_normal_vector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyID_GetIndex$MH() {
        return RuntimeHelper.requireNonNull(constants$61.JPC_BodyID_GetIndex$MH,"JPC_BodyID_GetIndex");
    }
    public static int JPC_BodyID_GetIndex ( int in_body_id) {
        var mh$ = JPC_BodyID_GetIndex$MH();
        try {
            return (int)mh$.invokeExact(in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyID_GetSequenceNumber$MH() {
        return RuntimeHelper.requireNonNull(constants$61.JPC_BodyID_GetSequenceNumber$MH,"JPC_BodyID_GetSequenceNumber");
    }
    public static byte JPC_BodyID_GetSequenceNumber ( int in_body_id) {
        var mh$ = JPC_BodyID_GetSequenceNumber$MH();
        try {
            return (byte)mh$.invokeExact(in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPC_BodyID_IsInvalid$MH() {
        return RuntimeHelper.requireNonNull(constants$61.JPC_BodyID_IsInvalid$MH,"JPC_BodyID_IsInvalid");
    }
    public static boolean JPC_BodyID_IsInvalid ( int in_body_id) {
        var mh$ = JPC_BodyID_IsInvalid$MH();
        try {
            return (boolean)mh$.invokeExact(in_body_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle JPJ_GetFeatures$MH() {
        return RuntimeHelper.requireNonNull(constants$61.JPJ_GetFeatures$MH,"JPJ_GetFeatures");
    }
    public static int JPJ_GetFeatures (Object... x0) {
        var mh$ = JPJ_GetFeatures$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static long _POSIX_C_SOURCE() {
        return 200809L;
    }
    public static int __TIMESIZE() {
        return (int)64L;
    }
    public static long __STDC_IEC_60559_BFP__() {
        return 201404L;
    }
    public static long __STDC_IEC_60559_COMPLEX__() {
        return 201404L;
    }
    public static long __STDC_ISO_10646__() {
        return 201706L;
    }
    public static MemoryAddress NULL() {
        return constants$61.NULL$ADDR;
    }
    public static int __WCLONE() {
        return (int)2147483648L;
    }
    public static int __HAVE_DISTINCT_FLOAT16() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT128X() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT128_UNLIKE_LDBL() {
        return (int)0L;
    }
    public static int __BYTE_ORDER() {
        return (int)1234L;
    }
    public static int __FLOAT_WORD_ORDER() {
        return (int)1234L;
    }
    public static int LITTLE_ENDIAN() {
        return (int)1234L;
    }
    public static int BIG_ENDIAN() {
        return (int)4321L;
    }
    public static int PDP_ENDIAN() {
        return (int)3412L;
    }
    public static int BYTE_ORDER() {
        return (int)1234L;
    }
    public static long _SIGSET_NWORDS() {
        return 16L;
    }
    public static int __NFDBITS() {
        return (int)64L;
    }
    public static int FD_SETSIZE() {
        return (int)1024L;
    }
    public static int NFDBITS() {
        return (int)64L;
    }
    public static int __PTHREAD_RWLOCK_ELISION_EXTRA() {
        return (int)0L;
    }
    public static int __WCHAR_MAX() {
        return (int)2147483647L;
    }
    public static int __WCHAR_MIN() {
        return (int)-2147483648L;
    }
    public static int INT8_MIN() {
        return (int)-128L;
    }
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    public static int INT8_MAX() {
        return (int)127L;
    }
    public static int INT16_MAX() {
        return (int)32767L;
    }
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    public static int UINT8_MAX() {
        return (int)255L;
    }
    public static int UINT16_MAX() {
        return (int)65535L;
    }
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    public static long UINT64_MAX() {
        return -1L;
    }
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    public static int INT_LEAST8_MAX() {
        return (int)127L;
    }
    public static int INT_LEAST16_MAX() {
        return (int)32767L;
    }
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    public static int UINT_LEAST8_MAX() {
        return (int)255L;
    }
    public static int UINT_LEAST16_MAX() {
        return (int)65535L;
    }
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    public static long INT_FAST16_MIN() {
        return -9223372036854775808L;
    }
    public static long INT_FAST32_MIN() {
        return -9223372036854775808L;
    }
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    public static int INT_FAST8_MAX() {
        return (int)127L;
    }
    public static long INT_FAST16_MAX() {
        return 9223372036854775807L;
    }
    public static long INT_FAST32_MAX() {
        return 9223372036854775807L;
    }
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    public static int UINT_FAST8_MAX() {
        return (int)255L;
    }
    public static long UINT_FAST16_MAX() {
        return -1L;
    }
    public static long UINT_FAST32_MAX() {
        return -1L;
    }
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    public static long UINTPTR_MAX() {
        return -1L;
    }
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    public static long UINTMAX_MAX() {
        return -1L;
    }
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    public static long SIZE_MAX() {
        return -1L;
    }
    public static int WCHAR_MIN() {
        return (int)-2147483648L;
    }
    public static int WCHAR_MAX() {
        return (int)2147483647L;
    }
    public static int WINT_MIN() {
        return (int)0L;
    }
    public static int WINT_MAX() {
        return (int)4294967295L;
    }
    public static int FLT_EVAL_METHOD() {
        return (int)0L;
    }
    public static int FLT_RADIX() {
        return (int)2L;
    }
    public static int FLT_MANT_DIG() {
        return (int)24L;
    }
    public static int DBL_MANT_DIG() {
        return (int)53L;
    }
    public static int LDBL_MANT_DIG() {
        return (int)64L;
    }
    public static int DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_DIG() {
        return (int)6L;
    }
    public static int DBL_DIG() {
        return (int)15L;
    }
    public static int LDBL_DIG() {
        return (int)18L;
    }
    public static int FLT_MIN_EXP() {
        return (int)-125L;
    }
    public static int DBL_MIN_EXP() {
        return (int)-1021L;
    }
    public static int LDBL_MIN_EXP() {
        return (int)-16381L;
    }
    public static int FLT_MIN_10_EXP() {
        return (int)-37L;
    }
    public static int DBL_MIN_10_EXP() {
        return (int)-307L;
    }
    public static int LDBL_MIN_10_EXP() {
        return (int)-4931L;
    }
    public static int FLT_MAX_EXP() {
        return (int)128L;
    }
    public static int DBL_MAX_EXP() {
        return (int)1024L;
    }
    public static int LDBL_MAX_EXP() {
        return (int)16384L;
    }
    public static int FLT_MAX_10_EXP() {
        return (int)38L;
    }
    public static int DBL_MAX_10_EXP() {
        return (int)308L;
    }
    public static int LDBL_MAX_10_EXP() {
        return (int)4932L;
    }
    public static float FLT_MAX() {
        return 3.4028234663852886E38f;
    }
    public static double DBL_MAX() {
        return 1.7976931348623157E308d;
    }
    public static float FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
    public static double DBL_EPSILON() {
        return 2.220446049250313E-16d;
    }
    public static float FLT_MIN() {
        return 1.1754943508222875E-38f;
    }
    public static double DBL_MIN() {
        return 2.2250738585072014E-308d;
    }
    public static float FLT_TRUE_MIN() {
        return 1.401298464324817E-45f;
    }
    public static double DBL_TRUE_MIN() {
        return 4.9E-324d;
    }
    public static int FLT_DECIMAL_DIG() {
        return (int)9L;
    }
    public static int DBL_DECIMAL_DIG() {
        return (int)17L;
    }
    public static int LDBL_DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int DBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int LDBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int JPC_COLLISION_GROUP_INVALID_GROUP() {
        return (int)4294967295L;
    }
    public static int JPC_COLLISION_GROUP_INVALID_SUB_GROUP() {
        return (int)4294967295L;
    }
    public static int JPC_BODY_ID_INVALID() {
        return (int)4294967295L;
    }
    public static int JPC_BODY_ID_SEQUENCE_BITS() {
        return (int)4278190080L;
    }
    public static int JPC_SUB_SHAPE_ID_EMPTY() {
        return (int)4294967295L;
    }
    public static float JPC_FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
}


