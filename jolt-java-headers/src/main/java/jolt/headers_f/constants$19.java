// Generated by jextract

package jolt.headers_f;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$19 {

    static final FunctionDescriptor JPC_AlignedFreeFunction$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JPC_AlignedFreeFunction$MH = RuntimeHelper.downcallHandle(
        constants$19.JPC_AlignedFreeFunction$FUNC
    );
    static final FunctionDescriptor JPC_RegisterDefaultAllocator$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle JPC_RegisterDefaultAllocator$MH = RuntimeHelper.downcallHandle(
        "JPC_RegisterDefaultAllocator",
        constants$19.JPC_RegisterDefaultAllocator$FUNC
    );
    static final FunctionDescriptor JPC_RegisterCustomAllocator$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle JPC_RegisterCustomAllocator$MH = RuntimeHelper.downcallHandle(
        "JPC_RegisterCustomAllocator",
        constants$19.JPC_RegisterCustomAllocator$FUNC
    );
    static final FunctionDescriptor JPC_CreateFactory$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle JPC_CreateFactory$MH = RuntimeHelper.downcallHandle(
        "JPC_CreateFactory",
        constants$19.JPC_CreateFactory$FUNC
    );
    static final FunctionDescriptor JPC_DestroyFactory$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle JPC_DestroyFactory$MH = RuntimeHelper.downcallHandle(
        "JPC_DestroyFactory",
        constants$19.JPC_DestroyFactory$FUNC
    );
}


