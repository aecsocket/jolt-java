import io.github.krakowski.jextract.JextractTask
import io.github.krakowski.jextract.LibraryDefinition

/* when using jextract:
 * 1. `apply false` -> `apply true`
 * 2. `gradle jextract`
 * 3. copy the autogenerated code from `build/generated/sources/jextract` to `src/main/java`
 * 4. `apply true` -> `apply false`
 * 5. `gradle clean`
 */

plugins {
    id("java-conventions")
    id("jextract-conventions") apply false
}

publishIfNeeded()

fun LibraryDefinition.defaults() {
    className.set("JoltPhysicsC")
    buildFeatures.forEach { feature ->
        definedMacros.add(feature.macro())
    }
}

tasks {
    withType<JextractTask> {
        header("$joltDir/JoltC/JoltPhysicsC.h") {
            defaults()
            targetPackage.set("jolt.headers")
        }

        header("$joltDir/JoltC/JoltPhysicsC.h") {
            defaults()
            targetPackage.set(when (buildFlavor) {
                JoltBuildFlavor.SP -> "jolt.headers_f"
                JoltBuildFlavor.DP -> "jolt.headers_d"
            })
        }
    }
}
