name: "Build"

on:
  push:
    branches: [ "**" ]
    tags-ignore: [ "**" ]
  pull_request:

jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        include:
          - os: ubuntu-latest
            publish-api: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout source"
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: "Setup Java"
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: "Setup Gradle"
        uses: gradle/gradle-build-action@v2
      - name: "Run Gradle build"
        run: ./gradlew build
#      - name: "Get version type (sh)"
#        if: ${{ matrix.os != 'windows-latest' }}
#        run: |
#          version_type=$(./gradlew -q --console=plain --no-daemon printVersionType)
#          echo version_type=$version_type >> $GITHUB_ENV
#      - name: "Get version type (ps)"
#        if: ${{ matrix.os == 'windows-latest' }}
#        run: |
#          $version_type = ./gradlew -q --console=plain --no-daemon printVersionType
#          echo version_type=$version_type >> $env:GITHUB_ENV
#      - name: "Publish snapshot"
#        if: ${{ env.version_type == 'snapshot' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#        run: ./gradlew publish
#        env:
#          CI_PUBLISH_API: ${{ matrix.publish-api }}
#          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
#          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
#      - name: "Publish release"
#        if: ${{ env.version_type == 'release' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#        run: ./gradlew -PforceSign=true publishToSonatype closeAndReleaseSonatypeStagingRepository
#        env:
#          CI_PUBLISH_API: ${{ matrix.publish-api }}
#          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
#          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
#          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
#          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
